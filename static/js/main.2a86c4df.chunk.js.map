{"version":3,"sources":["musicplayer/music/sanamre.mp3","musicplayer/music/sochnasake.mp3","musicplayer/music/sorry.mp3","musicplayer/music/yaanji.mp3","musicplayer/context.jsx","musicplayer/playlist.jsx","musicplayer/home.jsx","musicplayer/wrapper.jsx","index.js","musicplayer/music sync /^/.*/.mp3$","musicplayer/music/bharat.mp3","musicplayer/music/bomdiggy.mp3","musicplayer/music/galat.mp3","musicplayer/music/highrated.mp3","musicplayer/music/inkaedo.mp3","musicplayer/music/pachtaoge.mp3","musicplayer/music/preminche.mp3"],"names":["module","exports","SongsContext","createContext","Context","state","list","songs","img","infoObj","title","artist","album","genre","year","song","i","selected","activeSong","componentDidMount","setDetails","require","read","onSuccess","e","image","tags","picture","str","j","data","length","String","fromCharCode","o","format","window","btoa","console","log","push","setState","playNext","playPrev","setSong","index","Provider","value","this","props","children","Component","Playlist","Consumer","object","List","appearAnimation","enterAnimation","staggerDelayBy","map","ListItem","button","onClick","Grid","container","spacing","justify","item","src","xs","direction","Typography","variant","style","fontWeight","textTransform","overflowX","Home","volume","snackBarMessage","obj","play","songPosition","shuffle","repeatOne","snackBarOpen","slideOpen","loading","DialogOpen","isLiked","handleVolume","newValue","audioref","current","playPause","pause","handleSongPosition","currentTime","duration","changeSlide","setInterval","x","songEnded","repeatSong","random","Math","floor","playNextSong","setTimeout","playPrevSong","handleDialog","React","createRef","ref","type","onEnded","onPlaying","Paper","className","elevation","position","align","Skeleton","width","height","Slider","onChange","Fab","color","backgroundColor","boxShadow","size","alignItems","disableRipple","Checkbox","icon","checkedIcon","checked","dissbleRipple","ClickAwayListener","onClickAway","Snackbar","open","message","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Slide","in","bottom","left","timeout","enter","exit","background","defaultValue","onMouseUp","Button","Dialog","DialogContent","padding","ListItemText","Wrapper","tab","DrawerOpen","currentSongOpen","handleTabs","alert","handleCurrentSongSlide","textAlign","cursor","path","exact","top","ReactDOM","render","document","getElementById","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","code","keys","Object","resolve"],"mappings":"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","file":"static/js/main.2a86c4df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sanamre.d8e9d52f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sochnasake.ea7c6652.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sorry.b2a403fa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yaanji.74f7d684.mp3\";","import React, { Component, createContext } from \"react\";\r\n\r\nexport const SongsContext = createContext();\r\n\r\nexport class Context extends Component {\r\n  state = {\r\n    list: [\r\n      \"inkaedo\",\r\n      \"sanamre\",\r\n      \"sorry\",\r\n      \"galat\",\r\n      \"preminche\",\r\n      \"highrated\",\r\n      \"yaanji\",\r\n      \"bharat\",\r\n      \"bomdiggy\",\r\n      \"pachtaoge\",\r\n    ],\r\n    songs: [\r\n      {\r\n        img: null,\r\n        infoObj: {\r\n          title: \"\",\r\n          artist: \"sai\",\r\n          album: \"\",\r\n          genre: \"\",\r\n          year: 2020,\r\n        },\r\n        song: \"inkaedo\",\r\n      },\r\n    ],\r\n    i: 0,\r\n    selected: {\r\n      img: null,\r\n      infoObj: {\r\n        title: \"\",\r\n        artist: \"sai\",\r\n        album: \"\",\r\n        genre: \"\",\r\n        year: 2020,\r\n      },\r\n      song: \"inkaedo\",\r\n    },\r\n    activeSong: 0,\r\n  };\r\n  componentDidMount = () => {\r\n    this.setDetails();\r\n  };\r\n  setDetails = () => {\r\n    var jsmediatags = require(\"jsmediatags\");\r\n    jsmediatags.read(\r\n      `https://saiteja623.github.io${require(`./music/${\r\n        this.state.list[this.state.i]\r\n      }.mp3`)}`,\r\n      {\r\n        onSuccess: (e) => {\r\n          var image = e.tags.picture;\r\n          var str = \"\";\r\n          for (var j = 0; j < image.data.length; j++) {\r\n            str += String.fromCharCode(image.data[j]);\r\n          }\r\n          var base64 = \"data:\" + image.format + \";base64,\" + window.btoa(str);\r\n          var o = {\r\n            img: base64,\r\n            infoObj: e.tags,\r\n            song: this.state.list[this.state.i],\r\n          };\r\n          console.log(o);\r\n          if (this.state.i == 0) {\r\n            var songs = [];\r\n            songs.push(o);\r\n            this.setState({ songs, selected: o });\r\n          } else {\r\n            var songs = this.state.songs;\r\n            songs.push(o);\r\n            this.setState({ songs });\r\n          }\r\n          this.setState({ i: this.state.i + 1 });\r\n          if (this.state.i !== 10) {\r\n            this.setDetails();\r\n          }\r\n        },\r\n      }\r\n    );\r\n  };\r\n  playNext = () => {\r\n    var activeSong;\r\n    if (this.state.activeSong === 9) {\r\n      activeSong = 0;\r\n    } else {\r\n      activeSong = activeSong + 1;\r\n    }\r\n    this.setState({ activeSong });\r\n  };\r\n  playPrev = () => {\r\n    var activeSong;\r\n    if (this.state.activeSong === 0) {\r\n      activeSong = 9;\r\n    } else {\r\n      activeSong = activeSong - 1;\r\n    }\r\n    this.setState({ activeSong });\r\n  };\r\n  setSong = (index) => {\r\n    this.setState({ activeSong: index });\r\n  };\r\n  render() {\r\n    return (\r\n      <SongsContext.Provider\r\n        value={{\r\n          songs: this.state.songs,\r\n          list: this.state.list,\r\n          setSong: this.setSong,\r\n          activeSong: this.state.activeSong,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </SongsContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { SongsContext } from \"./context\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport withRouter from \"react-router-dom\";\r\nclass Playlist extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <SongsContext.Consumer>\r\n        {(object) => {\r\n          return (\r\n            <List>\r\n              <FlipMove\r\n                appearAnimation=\"fade\"\r\n                enterAnimation=\"fade\"\r\n                staggerDelayBy={1000}\r\n              >\r\n                {object.songs.map((e, index) => (\r\n                  <ListItem\r\n                    button\r\n                    onClick={() => {\r\n                      object.setSong(index);\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2} justify=\"space-between\">\r\n                      <Grid item>\r\n                        <img src={e.img} />\r\n                      </Grid>\r\n                      <Grid item xs container direction=\"column\">\r\n                        <Grid item>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              textTransform: \"capitalize\",\r\n                            }}\r\n                          >\r\n                            {e.song}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={{ overflowX: \"hidden\" }}\r\n                          >\r\n                            {e.infoObj.artist}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </ListItem>\r\n                ))}\r\n              </FlipMove>\r\n            </List>\r\n          );\r\n        }}\r\n      </SongsContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Playlist;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Slider,\r\n  Button,\r\n  Fab,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Snackbar,\r\n  Drawer,\r\n  Checkbox,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ClickAwayListener,\r\n  Dialog,\r\n  DialogContent,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { SongsContext, Context } from \"./context\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport RepeatOneIcon from \"@material-ui/icons/RepeatOne\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport \"./css/home.css\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst obj = null;\r\nclass Home extends Component {\r\n  state = {\r\n    volume: 60,\r\n    snackBarMessage: \"\",\r\n    obj: null,\r\n    play: false,\r\n    songPosition: 0,\r\n    img: null,\r\n    shuffle: false,\r\n    repeatOne: false,\r\n    snackBarOpen: false,\r\n    slideOpen: false,\r\n    loading: false,\r\n    DialogOpen: false,\r\n    isLiked: false,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.audioref = new React.createRef();\r\n  }\r\n\r\n  //to handle the volume\r\n  handleVolume = (e, newValue) => {\r\n    this.audioref.current.volume = newValue / 100;\r\n    this.setState({ volume: newValue });\r\n  };\r\n\r\n  //to handle the play/pause of the song\r\n  playPause = () => {\r\n    if (this.state.play) {\r\n      this.audioref.current.pause();\r\n    } else {\r\n      this.audioref.current.play();\r\n    }\r\n    this.setState({ play: !this.state.play });\r\n  };\r\n\r\n  //call back when the music player slide has changed and to set the song time to the changed value\r\n  handleSongPosition = (e, newValue) => {\r\n    this.audioref.current.currentTime =\r\n      this.audioref.current.duration * (newValue / 100);\r\n    this.setState({ songPosition: newValue });\r\n  };\r\n\r\n  //change the music player  slide as song plays\r\n  changeSlide = () => {\r\n    setInterval(() => {\r\n      var x =\r\n        this.audioref.current.currentTime *\r\n        (100 / this.audioref.current.duration);\r\n      this.setState({ songPosition: x });\r\n    }, 1000);\r\n  };\r\n\r\n  //action to be taken after song ended\r\n  songEnded = () => {\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    this.setState({ play: false });\r\n    if (this.state.repeatOne) {\r\n      this.repeatSong();\r\n    } else if (this.state.shuffle) {\r\n      var random = Math.floor(Math.random() * 10);\r\n      this.setState({ activeSong: random, play: true });\r\n    } else {\r\n      this.playNextSong();\r\n    }\r\n  };\r\n\r\n  //repeat the song again\r\n  repeatSong = () => {\r\n    this.audioref.current.play();\r\n    this.setState({ play: true });\r\n  };\r\n  //play next song\r\n  playNextSong = () => {\r\n    this.setState({ play: true });\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    setTimeout(() => {\r\n      this.audioref.current.play();\r\n    }, 1000);\r\n  };\r\n\r\n  //play the previous song\r\n  playPrevSong = () => {\r\n    this.setState({ play: true });\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    setTimeout(() => {\r\n      this.audioref.current.play();\r\n    }, 1000);\r\n  };\r\n\r\n  //handle the info  dialog\r\n  handleDialog = () => {\r\n    this.setState({ DialogOpen: !this.state.DialogOpen });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <SongsContext.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <audio\r\n                  ref={this.audioref}\r\n                  src={require(`./music/${\r\n                    object.songs[object.activeSong].song\r\n                  }.mp3`)}\r\n                  type=\"audio/mp3\"\r\n                  onEnded={this.songEnded}\r\n                  onPlaying={this.changeSlide}\r\n                ></audio>\r\n\r\n                <Paper\r\n                  className=\"music-player-paper\"\r\n                  elevation={3}\r\n                  style={{ position: \"relative\" }}\r\n                >\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    align=\"center\"\r\n                    style={{ fontWeight: \"bold\" }}\r\n                    className=\"album-title\"\r\n                  >\r\n                    {object.songs[object.activeSong].infoObj.title}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    align=\"left\"\r\n                    className=\"album-artist\"\r\n                  >\r\n                    {object.songs[object.activeSong].infoObj.artist}\r\n                  </Typography>\r\n                  <div className=\"album-image\">\r\n                    {this.state.loading ? (\r\n                      <Skeleton variant=\"circle\" className=\"skeleton\" />\r\n                    ) : (\r\n                      <img\r\n                        src={object.songs[object.activeSong].img}\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"music-slider\">\r\n                    <Slider\r\n                      onChange={this.handleSongPosition}\r\n                      value={this.state.songPosition}\r\n                      style={{ width: \"100%\" }}\r\n                      className=\"music-slider\"\r\n                    />\r\n                  </div>\r\n                  <Grid container justify=\"center\">\r\n                    <Grid item xs={2}>\r\n                      <Fab\r\n                        onClick={() => {\r\n                          this.playPrevSong();\r\n                        }}\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        size=\"small\"\r\n                      >\r\n                        <SkipPreviousIcon size=\"small\" />\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Fab\r\n                        onClick={() => {\r\n                          this.playPause();\r\n                        }}\r\n                        style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                        size=\"small\"\r\n                      >\r\n                        {this.state.play ? (\r\n                          <PauseIcon size=\"small\" />\r\n                        ) : (\r\n                          <PlayArrowIcon size=\"small\" />\r\n                        )}\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Fab\r\n                        onClick={() => {\r\n                          this.playNextSong();\r\n                        }}\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        size=\"small\"\r\n                      >\r\n                        <SkipNextIcon size=\"small\" />\r\n                      </Fab>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className=\"bottom-nav\"\r\n                  >\r\n                    <Grid item xs>\r\n                      <Fab\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        disableRipple\r\n                      >\r\n                        <Checkbox\r\n                          icon={<RepeatIcon size=\"small\" disableRipple />}\r\n                          checkedIcon={\r\n                            <ShuffleIcon size=\"small\" disableRipple />\r\n                          }\r\n                          size=\"small\"\r\n                          checked={this.state.shuffle}\r\n                          onChange={() => {\r\n                            var x = this.state.shuffle;\r\n                            if (x) {\r\n                              this.setState({\r\n                                snackBarMessage: \"Repeat All\",\r\n                              });\r\n                            } else {\r\n                              this.setState({\r\n                                snackBarMessage: \"Shuffle on\",\r\n                              });\r\n                            }\r\n                            this.setState({\r\n                              shuffle: !x,\r\n                              snackBarOpen: true,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Fab\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        disableRipple\r\n                      >\r\n                        <Checkbox\r\n                          icon={<FavoriteBorder size=\"small\" disableRipple />}\r\n                          checkedIcon={<Favorite size=\"small\" dissbleRipple />}\r\n                          size=\"small\"\r\n                          checked={this.state.isLiked}\r\n                          onChange={() => {\r\n                            if (!this.state.isLiked) {\r\n                              this.setState({\r\n                                snackBarOpen: true,\r\n                                snackBarMessage: \"Added to favourites\",\r\n                              });\r\n                            }\r\n                            this.setState({ isLiked: !this.state.isLiked });\r\n                          }}\r\n                        />\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <ClickAwayListener\r\n                        onClickAway={() => {\r\n                          this.setState({ slideOpen: false });\r\n                        }}\r\n                      >\r\n                        <Fab\r\n                          style={{\r\n                            color: \"black\",\r\n                            backgroundColor: \"transparent\",\r\n                            boxShadow: \"none\",\r\n                          }}\r\n                          disableRipple\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              slideOpen: !this.state.slideOpen,\r\n                            });\r\n                          }}\r\n                        >\r\n                          {this.state.volume == 0 ? (\r\n                            <VolumeOffIcon size=\"small\" />\r\n                          ) : (\r\n                            <VolumeUpIcon size=\"small\" />\r\n                          )}\r\n                        </Fab>\r\n                      </ClickAwayListener>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Fab\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        disableRipple\r\n                      >\r\n                        <Checkbox\r\n                          icon={<RepeatOneIcon size=\"small\" />}\r\n                          checkedIcon={\r\n                            <RepeatOneIcon\r\n                              size=\"small\"\r\n                              style={{ color: \"red\" }}\r\n                            />\r\n                          }\r\n                          size=\"small\"\r\n                          checked={this.state.repeatOne}\r\n                          onChange={() => {\r\n                            var x = this.state.repeatOne;\r\n                            if (x) {\r\n                              this.setState({\r\n                                snackBarMessage: \"Single repeat is off\",\r\n                              });\r\n                            } else {\r\n                              this.setState({\r\n                                snackBarMessage: \"Single repeat\",\r\n                              });\r\n                            }\r\n                            this.setState({\r\n                              repeatOne: !x,\r\n                              snackBarOpen: true,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Fab>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Snackbar\r\n                    open={this.state.snackBarOpen}\r\n                    message={this.state.snackBarMessage}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"left\",\r\n                    }}\r\n                    autoHideDuration={1500}\r\n                    onClose={() => {\r\n                      this.setState({ snackBarOpen: false });\r\n                    }}\r\n                  />\r\n\r\n                  <Slide\r\n                    direction=\"up\"\r\n                    in={this.state.slideOpen}\r\n                    style={{ position: \"absolute\", bottom: 0, left: 0 }}\r\n                    timeout={{\r\n                      enter: 600,\r\n                      exit: 1000,\r\n                    }}\r\n                  >\r\n                    <Paper\r\n                      className=\"volume-slider-paper\"\r\n                      style={{ background: \"whiteSmoke\" }}\r\n                    >\r\n                      <div className=\"volume-slider\">\r\n                        <div>\r\n                          {this.state.volume == 0 ? (\r\n                            <VolumeOffIcon size=\"small\" />\r\n                          ) : (\r\n                            <VolumeDownIcon size=\"small\" />\r\n                          )}\r\n                        </div>\r\n                        <Slider\r\n                          style={{ width: \"60%\" }}\r\n                          onChange={this.handleVolume}\r\n                          defaultValue={60}\r\n                          onMouseUp={() => {\r\n                            this.setState({ slideOpen: false });\r\n                          }}\r\n                        />\r\n                        <div>\r\n                          <VolumeUpIcon size=\"small\" />\r\n                        </div>\r\n                      </div>\r\n                    </Paper>\r\n                  </Slide>\r\n                </Paper>\r\n\r\n                <Button onClick={this.handleDialog} color=\"primary\">\r\n                  Info\r\n                </Button>\r\n                <Dialog\r\n                  open={this.state.DialogOpen}\r\n                  onClose={this.handleDialog}\r\n                >\r\n                  <DialogContent style={{ padding: 0 }}>\r\n                    <List>\r\n                      <ListItem>\r\n                        <ListItemText>\r\n                          <Typography variant=\"body1\">\r\n                            Title :{\" \"}\r\n                            {object.songs[object.activeSong].infoObj.title}\r\n                          </Typography>\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemText>\r\n                          <Typography variant=\"body1\">\r\n                            Album :{\" \"}\r\n                            {object.songs[object.activeSong].infoObj.album}\r\n                          </Typography>\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemText>\r\n                          <Typography variant=\"body1\">\r\n                            Genre :{\" \"}\r\n                            {object.songs[object.activeSong].infoObj.genre}\r\n                          </Typography>\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemText>\r\n                          <Typography variant=\"body1\">\r\n                            Artist :{\" \"}\r\n                            {object.songs[object.activeSong].infoObj.artist}\r\n                          </Typography>\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <ListItemText>\r\n                          <Typography variant=\"body1\">\r\n                            Year released :{\" \"}\r\n                            {object.songs[object.activeSong].infoObj.year}\r\n                          </Typography>\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                    </List>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </>\r\n            );\r\n          }}\r\n        </SongsContext.Consumer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Context, SongsContext } from \"./context\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  ListItem,\r\n  Paper,\r\n  Drawer,\r\n  Slide,\r\n  Backdrop,\r\n  IconButton,\r\n  ClickAwayListener,\r\n} from \"@material-ui/core\";\r\nimport Playlist from \"./playlist\";\r\nimport \"./css/wrapper.css\";\r\nimport Home from \"./home\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nclass Wrapper extends Component {\r\n  state = {\r\n    tab: 0,\r\n    loading: true,\r\n    DrawerOpen: false,\r\n    currentSongOpen: false,\r\n  };\r\n  componentDidMount = () => {\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleTabs = (e, newValue) => {\r\n    alert(newValue);\r\n    this.setState({ tab: newValue });\r\n  };\r\n  handleCurrentSongSlide = () => {\r\n    this.setState({ currentSongOpen: !this.state.currentSongOpen });\r\n  };\r\n  render() {\r\n    return (\r\n      <Context>\r\n        <SongsContext.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <Router>\r\n                <Paper className=\"wrapper-paper\" elevation={2}>\r\n                  <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className=\"title-grid\"\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      <ClickAwayListener\r\n                        onClickAway={() => {\r\n                          this.setState({ DrawerOpen: false });\r\n                        }}\r\n                      >\r\n                        {this.state.currentSongOpen ? (\r\n                          <ArrowDownwardIcon\r\n                            size=\"small\"\r\n                            onClick={this.handleCurrentSongSlide}\r\n                            style={{ color: \"white\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <MenuIcon\r\n                            size=\"small\"\r\n                            style={{ color: \"white\", cursor: \"pointer\" }}\r\n                            onClick={() => {\r\n                              this.setState({ DrawerOpen: true });\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </ClickAwayListener>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <Typography align=\"center\" variant=\"h6\" className=\"title\">\r\n                        {this.state.currentSongOpen ? \"Now Playing\" : \"Music\"}{\" \"}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs></Grid>\r\n                  </Grid>\r\n                  <Route path=\"/\" exact>\r\n                    <div className=\"play-list\">\r\n                      <Playlist />\r\n                    </div>\r\n                  </Route>\r\n                  <Paper className=\"music-player-bottom\" elevation={4}>\r\n                    <ListItem button onClick={this.handleCurrentSongSlide}>\r\n                      <Grid container spacing={2} justify=\"space-between\">\r\n                        <Grid item>\r\n                          <img src={object.songs[object.activeSong].img} />\r\n                        </Grid>\r\n                        <Grid item xs container direction=\"column\">\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              style={{\r\n                                fontWeight: \"bold\",\r\n                                textTransform: \"capitalize\",\r\n                              }}\r\n                            >\r\n                              {object.songs[object.activeSong].song}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              style={{ overflowX: \"hidden\" }}\r\n                            >\r\n                              {object.songs[object.activeSong].infoObj.artist}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </ListItem>\r\n                  </Paper>\r\n\r\n                  <Slide\r\n                    direction=\"right\"\r\n                    in={this.state.DrawerOpen}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"100px\",\r\n                      height: \"100%\",\r\n                    }}\r\n                    timeout={{\r\n                      enter: 600,\r\n                      exit: 1000,\r\n                    }}\r\n                  >\r\n                    <div style={{ width: \"200px\" }} className=\"slide\">\r\n                      helllo\r\n                    </div>\r\n                  </Slide>\r\n                  <Slide\r\n                    in={this.state.currentSongOpen}\r\n                    direction=\"up\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"91.7vh\",\r\n                    }}\r\n                    timeout={{\r\n                      enter: 800,\r\n                      exit: 600,\r\n                    }}\r\n                  >\r\n                    <Paper>\r\n                      <Home />\r\n                    </Paper>\r\n                  </Slide>\r\n                </Paper>\r\n              </Router>\r\n            );\r\n          }}\r\n        </SongsContext.Consumer>\r\n      </Context>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Wrapper from \"./musicplayer/wrapper\";\r\nimport Home from \"./musicplayer/home\";\r\n\r\nReactDOM.render(<Wrapper />, document.getElementById(\"root\"));\r\n","var map = {\n\t\"./bharat.mp3\": 93,\n\t\"./bomdiggy.mp3\": 94,\n\t\"./galat.mp3\": 95,\n\t\"./highrated.mp3\": 96,\n\t\"./inkaedo.mp3\": 97,\n\t\"./pachtaoge.mp3\": 98,\n\t\"./preminche.mp3\": 99,\n\t\"./sanamre.mp3\": 100,\n\t\"./sochnasake.mp3\": 101,\n\t\"./sorry.mp3\": 102,\n\t\"./yaanji.mp3\": 103\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;","module.exports = __webpack_public_path__ + \"static/media/bharat.19514d6d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bomdiggy.978a7ec7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/galat.7e7998cd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/highrated.ee330ef9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/inkaedo.bddd0ee3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pachtaoge.86457d66.mp3\";","module.exports = __webpack_public_path__ + \"static/media/preminche.26b929d3.mp3\";"],"sourceRoot":""}