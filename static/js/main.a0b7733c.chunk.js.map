{"version":3,"sources":["musicplayer/music/inkaedo.mp3","musicplayer/music/pachtaoge.mp3","musicplayer/music/preminche.mp3","musicplayer/music/sanamre.mp3","musicplayer/music/sochnasake.mp3","musicplayer/music/sorry.mp3","musicplayer/music/yaanji.mp3","musicplayer/context.jsx","musicplayer/playlist.jsx","musicplayer/home.jsx","musicplayer/favourites.jsx","musicplayer/wrapper.jsx","index.js","musicplayer/music sync /^/.*/.mp3$","musicplayer/music/bharat.mp3","musicplayer/music/bomdiggy.mp3","musicplayer/music/galat.mp3","musicplayer/music/highrated.mp3"],"names":["module","exports","SongsContext","createContext","Context","state","list","songs","img","infoObj","title","artist","album","genre","year","song","i","selected","activeSong","isPlay","componentDidMount","setDetails","handlePlayPause","setState","require","read","onSuccess","e","image","tags","picture","str","j","data","length","String","fromCharCode","o","format","window","btoa","console","log","push","playNext","playPrev","setSong","index","Provider","value","this","props","children","Component","Playlist","Consumer","object","List","appearAnimation","enterAnimation","staggerDelayBy","map","ListItem","button","onClick","Grid","container","spacing","justify","item","src","xs","direction","style","color","Typography","variant","fontWeight","textTransform","overflowX","Divider","Home","volume","snackBarMessage","obj","play","songPosition","shuffle","repeatOne","snackBarOpen","slideOpen","loading","isLiked","handleVolume","newValue","audioref","current","playPause","pause","handleSongPosition","currentTime","duration","changeSlide","setInterval","x","songEnded","repeatSong","random","Math","floor","playNextSong","setTimeout","playPrevSong","likeUnlike","localStorage","removeItem","setItem","checkForLike","action","getItem","React","createRef","ref","type","onEnded","onPlaying","Paper","className","elevation","position","align","Skeleton","width","height","Slider","onChange","Fab","backgroundColor","boxShadow","size","alignItems","disableRipple","Checkbox","icon","checkedIcon","checked","dissbleRipple","ClickAwayListener","onClickAway","Snackbar","open","message","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Slide","in","bottom","left","timeout","enter","exit","background","defaultValue","onMouseUp","Button","handleDialog","Favourite","Wrapper","tab","DrawerOpen","currentSongOpen","DialogOpen","handleTabs","alert","handleCurrentSongSlide","basename","location","pathname","textAlign","cursor","path","exact","paddingRight","top","ListItemText","component","Link","to","Dialog","DialogContent","padding","ReactDOM","render","document","getElementById","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","code","keys","Object","resolve"],"mappings":"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","file":"static/js/main.a0b7733c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/inkaedo.bddd0ee3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pachtaoge.86457d66.mp3\";","module.exports = __webpack_public_path__ + \"static/media/preminche.26b929d3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sanamre.d8e9d52f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sochnasake.ea7c6652.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sorry.b2a403fa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yaanji.74f7d684.mp3\";","import React, { Component, createContext } from \"react\";\r\n\r\nexport const SongsContext = createContext();\r\n\r\nexport class Context extends Component {\r\n  state = {\r\n    list: [\r\n      \"inkaedo\",\r\n      \"sanamre\",\r\n      \"sorry\",\r\n      \"galat\",\r\n      \"preminche\",\r\n      \"highrated\",\r\n      \"yaanji\",\r\n      \"bharat\",\r\n      \"bomdiggy\",\r\n      \"pachtaoge\",\r\n    ],\r\n    songs: [\r\n      {\r\n        img: null,\r\n        infoObj: {\r\n          title: \"\",\r\n          artist: \"sai\",\r\n          album: \"\",\r\n          genre: \"\",\r\n          year: 2020,\r\n        },\r\n        song: \"inkaedo\",\r\n      },\r\n    ],\r\n    i: 0,\r\n    selected: {\r\n      img: null,\r\n      infoObj: {\r\n        title: \"\",\r\n        artist: \"sai\",\r\n        album: \"\",\r\n        genre: \"\",\r\n        year: 2020,\r\n      },\r\n      song: \"inkaedo\",\r\n    },\r\n    activeSong: 0,\r\n    isPlay: false,\r\n  };\r\n  componentDidMount = () => {\r\n    this.setDetails();\r\n  };\r\n  // display the animation in wrapper only when a song is playing\r\n  handlePlayPause = () => {\r\n    this.setState({ isPlay: !this.state.isPlay });\r\n  };\r\n  setDetails = () => {\r\n    var jsmediatags = require(\"jsmediatags\");\r\n    jsmediatags.read(\r\n      `https://saiteja623.github.io${require(`./music/${\r\n        this.state.list[this.state.i]\r\n      }.mp3`)}`,\r\n      {\r\n        onSuccess: (e) => {\r\n          var image = e.tags.picture;\r\n          var str = \"\";\r\n          for (var j = 0; j < image.data.length; j++) {\r\n            str += String.fromCharCode(image.data[j]);\r\n          }\r\n          var base64 = \"data:\" + image.format + \";base64,\" + window.btoa(str);\r\n          var o = {\r\n            img: base64,\r\n            infoObj: e.tags,\r\n            song: this.state.list[this.state.i],\r\n          };\r\n          console.log(o);\r\n          if (this.state.i == 0) {\r\n            var songs = [];\r\n            songs.push(o);\r\n            this.setState({ songs, selected: o });\r\n          } else {\r\n            var songs = this.state.songs;\r\n            songs.push(o);\r\n            this.setState({ songs });\r\n          }\r\n          this.setState({ i: this.state.i + 1 });\r\n          if (this.state.i !== 10) {\r\n            this.setDetails();\r\n          }\r\n        },\r\n      }\r\n    );\r\n  };\r\n  playNext = () => {\r\n    var activeSong = this.state.activeSong;\r\n    if (activeSong === 9) {\r\n      activeSong = 0;\r\n    } else {\r\n      activeSong = activeSong + 1;\r\n    }\r\n    this.setState({ activeSong });\r\n    this.setState({ isPlay: true });\r\n  };\r\n  playPrev = () => {\r\n    var activeSong = this.state.activeSong;\r\n    if (activeSong === 0) {\r\n      activeSong = 9;\r\n    } else {\r\n      activeSong = activeSong - 1;\r\n    }\r\n    this.setState({ activeSong });\r\n    this.setState({ isPlay: true });\r\n  };\r\n  setSong = (index) => {\r\n    this.setState({ activeSong: index });\r\n  };\r\n  render() {\r\n    return (\r\n      <SongsContext.Provider\r\n        value={{\r\n          songs: this.state.songs,\r\n          list: this.state.list,\r\n          setSong: this.setSong,\r\n          activeSong: this.state.activeSong,\r\n          playPrev: this.playPrev,\r\n          playNext: this.playNext,\r\n          handlePlayPause: this.handlePlayPause,\r\n          isPlay: this.state.isPlay,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </SongsContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { SongsContext } from \"./context\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport withRouter from \"react-router-dom\";\r\nclass Playlist extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <SongsContext.Consumer>\r\n        {(object) => {\r\n          return (\r\n            <List>\r\n              <FlipMove\r\n                appearAnimation=\"fade\"\r\n                enterAnimation=\"fade\"\r\n                staggerDelayBy={1000}\r\n              >\r\n                {object.songs.map((e, index) => (\r\n                  <>\r\n                    <ListItem\r\n                      button\r\n                      onClick={() => {\r\n                        object.setSong(index);\r\n                      }}\r\n                    >\r\n                      <Grid container spacing={2} justify=\"space-between\">\r\n                        <Grid item>\r\n                          <img src={e.img} />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs\r\n                          container\r\n                          direction=\"column\"\r\n                          style={\r\n                            object.activeSong == index\r\n                              ? { color: \"#ff3b57\" }\r\n                              : null\r\n                          }\r\n                        >\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              style={{\r\n                                fontWeight: \"bold\",\r\n                                textTransform: \"capitalize\",\r\n                              }}\r\n                            >\r\n                              {e.song}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              style={{ overflowX: \"hidden\" }}\r\n                            >\r\n                              {e.infoObj.artist}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </>\r\n                ))}\r\n              </FlipMove>\r\n            </List>\r\n          );\r\n        }}\r\n      </SongsContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Playlist;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Slider,\r\n  Button,\r\n  Fab,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Snackbar,\r\n  Drawer,\r\n  Checkbox,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ClickAwayListener,\r\n  Dialog,\r\n  DialogContent,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { SongsContext, Context } from \"./context\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport RepeatOneIcon from \"@material-ui/icons/RepeatOne\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport \"./css/home.css\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst obj = null;\r\nclass Home extends Component {\r\n  state = {\r\n    volume: 60,\r\n    snackBarMessage: \"\",\r\n    obj: null,\r\n    play: false,\r\n    songPosition: 0,\r\n    img: null,\r\n    shuffle: false,\r\n    repeatOne: false,\r\n    snackBarOpen: false,\r\n    slideOpen: false,\r\n    loading: false,\r\n\r\n    isLiked: false,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.audioref = new React.createRef();\r\n  }\r\n\r\n  //to handle the volume\r\n  handleVolume = (e, newValue) => {\r\n    this.audioref.current.volume = newValue / 100;\r\n    this.setState({ volume: newValue });\r\n  };\r\n\r\n  //to handle the play/pause of the song\r\n  playPause = () => {\r\n    if (this.state.play) {\r\n      this.audioref.current.pause();\r\n    } else {\r\n      this.audioref.current.play();\r\n    }\r\n    this.setState({ play: !this.state.play });\r\n  };\r\n\r\n  //call back when the music player slide has changed and to set the song time to the changed value\r\n  handleSongPosition = (e, newValue) => {\r\n    this.audioref.current.currentTime =\r\n      this.audioref.current.duration * (newValue / 100);\r\n    this.setState({ songPosition: newValue });\r\n  };\r\n\r\n  //change the music player  slide as song plays\r\n  changeSlide = () => {\r\n    setInterval(() => {\r\n      var x =\r\n        this.audioref.current.currentTime *\r\n        (100 / this.audioref.current.duration);\r\n      this.setState({ songPosition: x });\r\n    }, 1000);\r\n  };\r\n\r\n  //action to be taken after song ended\r\n  songEnded = () => {\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    this.setState({ play: false });\r\n    if (this.state.repeatOne) {\r\n      this.repeatSong();\r\n    } else if (this.state.shuffle) {\r\n      var random = Math.floor(Math.random() * 10);\r\n      this.setState({ activeSong: random, play: true });\r\n    } else {\r\n      this.playNextSong();\r\n    }\r\n  };\r\n\r\n  //repeat the song again\r\n  repeatSong = () => {\r\n    this.audioref.current.play();\r\n    this.setState({ play: true });\r\n  };\r\n  //play next song\r\n  playNextSong = () => {\r\n    this.setState({ play: true });\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    setTimeout(() => {\r\n      this.audioref.current.play();\r\n    }, 1000);\r\n  };\r\n\r\n  //play the previous song\r\n  playPrevSong = () => {\r\n    this.setState({ play: true });\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    setTimeout(() => {\r\n      this.audioref.current.play();\r\n    }, 1000);\r\n  };\r\n\r\n  //like and unlike song\r\n  likeUnlike = (index) => {\r\n    if (this.state.isLiked) {\r\n      localStorage.removeItem(index);\r\n    } else {\r\n      localStorage.setItem(index, index);\r\n    }\r\n  };\r\n\r\n  //set like to normal on prev and next song\r\n  checkForLike = (action, index) => {\r\n    if (action == \"prev\") {\r\n      index = index - 1;\r\n      if (index == -1) {\r\n        index = 9; //total lngth of list -1  ie last element\r\n      }\r\n    } else {\r\n      index = index + 1;\r\n      if (index == 10) {\r\n        //10 is the length of the list\r\n        index = 0;\r\n      }\r\n    }\r\n    var x = localStorage.getItem(index);\r\n    if (x != null) {\r\n      this.setState({ isLiked: true });\r\n    } else {\r\n      this.setState({ isLiked: false });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <SongsContext.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <audio\r\n                  ref={this.audioref}\r\n                  src={require(`./music/${\r\n                    object.songs[object.activeSong].song\r\n                  }.mp3`)}\r\n                  type=\"audio/mp3\"\r\n                  onEnded={this.songEnded}\r\n                  onPlaying={this.changeSlide}\r\n                ></audio>\r\n\r\n                <Paper\r\n                  className=\"music-player-paper\"\r\n                  elevation={3}\r\n                  style={{ position: \"relative\" }}\r\n                >\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    align=\"center\"\r\n                    style={{ fontWeight: \"bold\" }}\r\n                    className=\"album-title\"\r\n                  >\r\n                    {object.songs[object.activeSong].infoObj.title}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    align=\"left\"\r\n                    className=\"album-artist\"\r\n                  >\r\n                    {object.songs[object.activeSong].infoObj.artist}\r\n                  </Typography>\r\n                  <div className=\"album-image\">\r\n                    {this.state.loading ? (\r\n                      <Skeleton variant=\"circle\" className=\"skeleton\" />\r\n                    ) : (\r\n                      <img\r\n                        src={object.songs[object.activeSong].img}\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"music-slider\">\r\n                    <Slider\r\n                      onChange={this.handleSongPosition}\r\n                      value={this.state.songPosition}\r\n                      style={{ width: \"100%\" }}\r\n                      className=\"music-slider\"\r\n                    />\r\n                  </div>\r\n                  <Grid container justify=\"center\">\r\n                    <Grid item xs={2}>\r\n                      <Fab\r\n                        onClick={() => {\r\n                          this.playPrevSong();\r\n                          object.playPrev();\r\n                          this.checkForLike(\"prev\", object.activeSong);\r\n                        }}\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        size=\"small\"\r\n                      >\r\n                        <SkipPreviousIcon size=\"small\" />\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Fab\r\n                        onClick={() => {\r\n                          this.playPause();\r\n                          object.handlePlayPause();\r\n                        }}\r\n                        style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                        size=\"small\"\r\n                      >\r\n                        {this.state.play ? (\r\n                          <PauseIcon size=\"small\" />\r\n                        ) : (\r\n                          <PlayArrowIcon size=\"small\" />\r\n                        )}\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Fab\r\n                        onClick={() => {\r\n                          this.playNextSong();\r\n                          object.playNext();\r\n                          this.checkForLike(\"next\", object.activeSong);\r\n                        }}\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        size=\"small\"\r\n                      >\r\n                        <SkipNextIcon size=\"small\" />\r\n                      </Fab>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className=\"bottom-nav\"\r\n                  >\r\n                    <Grid item xs>\r\n                      <Fab\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        disableRipple\r\n                      >\r\n                        <Checkbox\r\n                          icon={<RepeatIcon size=\"small\" disableRipple />}\r\n                          checkedIcon={\r\n                            <ShuffleIcon size=\"small\" disableRipple />\r\n                          }\r\n                          size=\"small\"\r\n                          checked={this.state.shuffle}\r\n                          onChange={() => {\r\n                            var x = this.state.shuffle;\r\n                            if (x) {\r\n                              this.setState({\r\n                                snackBarMessage: \"Repeat All\",\r\n                              });\r\n                            } else {\r\n                              this.setState({\r\n                                snackBarMessage: \"Shuffle on\",\r\n                              });\r\n                            }\r\n                            this.setState({\r\n                              shuffle: !x,\r\n                              snackBarOpen: true,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Fab\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        disableRipple\r\n                      >\r\n                        <Checkbox\r\n                          icon={<FavoriteBorder size=\"small\" disableRipple />}\r\n                          checkedIcon={<Favorite size=\"small\" dissbleRipple />}\r\n                          size=\"small\"\r\n                          checked={this.state.isLiked}\r\n                          onChange={() => {\r\n                            this.likeUnlike(object.activeSong);\r\n                            if (!this.state.isLiked) {\r\n                              this.setState({\r\n                                snackBarOpen: true,\r\n                                snackBarMessage: \"Added to favourites\",\r\n                              });\r\n                            }\r\n                            this.setState({ isLiked: !this.state.isLiked });\r\n                          }}\r\n                        />\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <ClickAwayListener\r\n                        onClickAway={() => {\r\n                          this.setState({ slideOpen: false });\r\n                        }}\r\n                      >\r\n                        <Fab\r\n                          style={{\r\n                            color: \"black\",\r\n                            backgroundColor: \"transparent\",\r\n                            boxShadow: \"none\",\r\n                          }}\r\n                          disableRipple\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              slideOpen: !this.state.slideOpen,\r\n                            });\r\n                          }}\r\n                        >\r\n                          {this.state.volume == 0 ? (\r\n                            <VolumeOffIcon size=\"small\" />\r\n                          ) : (\r\n                            <VolumeUpIcon size=\"small\" />\r\n                          )}\r\n                        </Fab>\r\n                      </ClickAwayListener>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Fab\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        disableRipple\r\n                      >\r\n                        <Checkbox\r\n                          icon={<RepeatOneIcon size=\"small\" />}\r\n                          checkedIcon={\r\n                            <RepeatOneIcon\r\n                              size=\"small\"\r\n                              style={{ color: \"red\" }}\r\n                            />\r\n                          }\r\n                          size=\"small\"\r\n                          checked={this.state.repeatOne}\r\n                          onChange={() => {\r\n                            var x = this.state.repeatOne;\r\n                            if (x) {\r\n                              this.setState({\r\n                                snackBarMessage: \"Single repeat is off\",\r\n                              });\r\n                            } else {\r\n                              this.setState({\r\n                                snackBarMessage: \"Single repeat\",\r\n                              });\r\n                            }\r\n                            this.setState({\r\n                              repeatOne: !x,\r\n                              snackBarOpen: true,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Fab>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Snackbar\r\n                    open={this.state.snackBarOpen}\r\n                    message={this.state.snackBarMessage}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"left\",\r\n                    }}\r\n                    autoHideDuration={1500}\r\n                    onClose={() => {\r\n                      this.setState({ snackBarOpen: false });\r\n                    }}\r\n                  />\r\n\r\n                  <Slide\r\n                    direction=\"up\"\r\n                    in={this.state.slideOpen}\r\n                    style={{ position: \"absolute\", bottom: 0, left: 0 }}\r\n                    timeout={{\r\n                      enter: 600,\r\n                      exit: 1000,\r\n                    }}\r\n                  >\r\n                    <Paper\r\n                      className=\"volume-slider-paper\"\r\n                      style={{ background: \"whiteSmoke\" }}\r\n                    >\r\n                      <div className=\"volume-slider\">\r\n                        <div>\r\n                          {this.state.volume == 0 ? (\r\n                            <VolumeOffIcon size=\"small\" />\r\n                          ) : (\r\n                            <VolumeDownIcon size=\"small\" />\r\n                          )}\r\n                        </div>\r\n                        <Slider\r\n                          style={{ width: \"60%\" }}\r\n                          onChange={this.handleVolume}\r\n                          defaultValue={60}\r\n                          onMouseUp={() => {\r\n                            this.setState({ slideOpen: false });\r\n                          }}\r\n                        />\r\n                        <div>\r\n                          <VolumeUpIcon size=\"small\" />\r\n                        </div>\r\n                      </div>\r\n                    </Paper>\r\n                  </Slide>\r\n                </Paper>\r\n\r\n                <Button onClick={this.handleDialog} color=\"primary\">\r\n                  Info\r\n                </Button>\r\n              </>\r\n            );\r\n          }}\r\n        </SongsContext.Consumer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { SongsContext } from \"./context\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nclass Favourite extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <SongsContext.Consumer>\r\n        {(object) => {\r\n          return (\r\n            <List>\r\n              {object.songs.map((e, index) => {\r\n                var x = localStorage.getItem(index);\r\n                if (x != null) {\r\n                  return (\r\n                    <>\r\n                      <ListItem\r\n                        button\r\n                        onClick={() => {\r\n                          object.setSong(index);\r\n                        }}\r\n                      >\r\n                        <Grid container spacing={2} justify=\"space-between\">\r\n                          <Grid item>\r\n                            <img src={e.img} />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs\r\n                            container\r\n                            direction=\"column\"\r\n                            style={\r\n                              object.activeSong == index\r\n                                ? { color: \"#ff3b57\" }\r\n                                : null\r\n                            }\r\n                          >\r\n                            <Grid item>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  textTransform: \"capitalize\",\r\n                                }}\r\n                              >\r\n                                {e.song}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <Typography\r\n                                variant=\"subtitle2\"\r\n                                style={{ overflowX: \"hidden\" }}\r\n                              >\r\n                                {e.infoObj.artist}\r\n                              </Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </>\r\n                  );\r\n                }\r\n              })}\r\n            </List>\r\n          );\r\n        }}\r\n      </SongsContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favourite;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Context, SongsContext } from \"./context\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  ListItem,\r\n  Paper,\r\n  Drawer,\r\n  Slide,\r\n  Backdrop,\r\n  IconButton,\r\n  ClickAwayListener,\r\n  Divider,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  List,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport Playlist from \"./playlist\";\r\nimport \"./css/wrapper.css\";\r\nimport Home from \"./home\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport Favourite from \"./favourites\";\r\n\r\nclass Wrapper extends Component {\r\n  state = {\r\n    tab: 0,\r\n    loading: true,\r\n    DrawerOpen: false,\r\n    currentSongOpen: false,\r\n    DialogOpen: false,\r\n  };\r\n  componentDidMount = () => {\r\n    setTimeout(() => {\r\n      this.setState({ loading: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleTabs = (e, newValue) => {\r\n    alert(newValue);\r\n    this.setState({ tab: newValue });\r\n  };\r\n  handleCurrentSongSlide = () => {\r\n    this.setState({ currentSongOpen: !this.state.currentSongOpen });\r\n  };\r\n\r\n  //handle the info  dialog\r\n  handleDialog = () => {\r\n    this.setState({ DialogOpen: !this.state.DialogOpen });\r\n  };\r\n  render() {\r\n    return (\r\n      <Context>\r\n        <SongsContext.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <Router basename={window.location.pathname || \"\"}>\r\n                <Paper className=\"wrapper-paper\" elevation={2}>\r\n                  <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className=\"title-grid\"\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      <ClickAwayListener\r\n                        onClickAway={() => {\r\n                          this.setState({ DrawerOpen: false });\r\n                        }}\r\n                      >\r\n                        {this.state.currentSongOpen ? (\r\n                          <KeyboardArrowDownIcon\r\n                            size=\"small\"\r\n                            onClick={this.handleCurrentSongSlide}\r\n                            style={{ color: \"white\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <MenuIcon\r\n                            size=\"small\"\r\n                            style={{ color: \"white\", cursor: \"pointer\" }}\r\n                            onClick={() => {\r\n                              this.setState({ DrawerOpen: true });\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </ClickAwayListener>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <Typography align=\"center\" variant=\"h6\" className=\"title\">\r\n                        {this.state.currentSongOpen ? \"Now Playing\" : \"Music\"}{\" \"}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      {this.state.currentSongOpen && (\r\n                        <Button onClick={this.handleDialog} disableRipple>\r\n                          <InfoIcon size=\"small\" style={{ color: \"white\" }} />\r\n                        </Button>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Route path=\"/\" exact>\r\n                    <div className=\"play-list\">\r\n                      <Playlist />\r\n                    </div>\r\n                  </Route>\r\n                  <Route path=\"/fav\" exact>\r\n                    <div className=\"play-list\">\r\n                      <Favourite />\r\n                    </div>\r\n                  </Route>\r\n                  <Paper className=\"music-player-bottom\" elevation={4}>\r\n                    <ListItem button onClick={this.handleCurrentSongSlide}>\r\n                      <Grid container spacing={2} justify=\"space-between\">\r\n                        <Grid item>\r\n                          <img src={object.songs[object.activeSong].img} />\r\n                        </Grid>\r\n                        <Grid item xs container direction=\"column\">\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              style={{\r\n                                fontWeight: \"bold\",\r\n                                textTransform: \"capitalize\",\r\n                              }}\r\n                            >\r\n                              {object.songs[object.activeSong].song}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              style={{ overflowX: \"hidden\" }}\r\n                            >\r\n                              {object.songs[object.activeSong].infoObj.artist}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item style={{ paddingRight: \"10px\" }}>\r\n                          <div className={object.isPlay ? \"anim-div\" : null}>\r\n                            <div className=\"one\"></div>\r\n                            <div className=\"two\"></div>\r\n                            <div className=\"three\"></div>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </ListItem>\r\n                  </Paper>\r\n                  <Slide\r\n                    direction=\"right\"\r\n                    in={this.state.DrawerOpen}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"100px\",\r\n                      height: \"100%\",\r\n                    }}\r\n                    timeout={{\r\n                      enter: 600,\r\n                      exit: 1000,\r\n                    }}\r\n                  >\r\n                    <div style={{ width: \"200px\" }} className=\"slide\">\r\n                      <List>\r\n                        <ListItem button>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\" align=\"left\">\r\n                              <MusicNoteIcon size=\"small\" /> All songs\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        <ListItem button component={Link} to=\"/fav\">\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\" align=\"left\">\r\n                              <FavoriteIcon size=\"small\" /> Favourites\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        <ListItem button>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\" align=\"left\">\r\n                              <AlbumIcon size=\"small\" /> Albums\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                      </List>\r\n                    </div>\r\n                  </Slide>\r\n\r\n                  <Slide\r\n                    in={this.state.currentSongOpen}\r\n                    direction=\"up\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"91.5%\",\r\n                    }}\r\n                    timeout={{\r\n                      enter: 600,\r\n                      exit: 400,\r\n                    }}\r\n                  >\r\n                    <Paper>\r\n                      <Home />\r\n                    </Paper>\r\n                  </Slide>\r\n                  <Dialog\r\n                    open={this.state.DialogOpen}\r\n                    onClose={this.handleDialog}\r\n                  >\r\n                    <DialogContent style={{ padding: 0 }}>\r\n                      <List>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Title :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.title}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Album :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.album}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Genre :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.genre}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Artist :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.artist}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Year released :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.year}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                      </List>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Paper>\r\n              </Router>\r\n            );\r\n          }}\r\n        </SongsContext.Consumer>\r\n      </Context>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Wrapper from \"./musicplayer/wrapper\";\r\nimport Home from \"./musicplayer/home\";\r\n\r\nReactDOM.render(<Wrapper />, document.getElementById(\"root\"));\r\n","var map = {\n\t\"./bharat.mp3\": 96,\n\t\"./bomdiggy.mp3\": 97,\n\t\"./galat.mp3\": 98,\n\t\"./highrated.mp3\": 99,\n\t\"./inkaedo.mp3\": 100,\n\t\"./pachtaoge.mp3\": 101,\n\t\"./preminche.mp3\": 102,\n\t\"./sanamre.mp3\": 103,\n\t\"./sochnasake.mp3\": 104,\n\t\"./sorry.mp3\": 105,\n\t\"./yaanji.mp3\": 106\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60;","module.exports = __webpack_public_path__ + \"static/media/bharat.19514d6d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bomdiggy.978a7ec7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/galat.7e7998cd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/highrated.ee330ef9.mp3\";"],"sourceRoot":""}