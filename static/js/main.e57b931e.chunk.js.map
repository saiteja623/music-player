{"version":3,"sources":["musicplayer/music/Bomdiggy.mp3","musicplayer/music/Butta Bomma.mp3","musicplayer/music/Emo Emo.mp3","musicplayer/music/Endhuko Emo.mp3","musicplayer/music/Faded.mp3","musicplayer/music/Haan Main Galat.mp3","musicplayer/music/Hawayein.mp3","musicplayer/music/Ik Variaa.mp3","musicplayer/music/Illegal Weapon.mp3","musicplayer/music/Inka Edho.mp3","musicplayer/music/Kudukku song.mp3","musicplayer/music/Kutti story.mp3","musicplayer/music/Maatevinadhuga.mp3","musicplayer/music/Malang.mp3","musicplayer/music/Manasu Maree.mp3","musicplayer/music/O saki saki.mp3","musicplayer/music/Pachtaoge.mp3","musicplayer/music/Ramulo Ramula.mp3","musicplayer/music/Rowdybaby.mp3","musicplayer/music/Samajavaragamana.mp3","musicplayer/music/Singles Anthem.mp3","musicplayer/music/Solo.mp3","musicplayer/music/Sorry.mp3","musicplayer/music/Starboy.mp3","musicplayer/music/Taki Taki.mp3","musicplayer/music/Thodi jagah.mp3","musicplayer/music/Thunder.mp3","musicplayer/music/Yaanji.mp3","musicplayer/music/sanamre.mp3","musicplayer/context.jsx","musicplayer/playlist.jsx","musicplayer/home.jsx","musicplayer/favourites.jsx","musicplayer/wrapper.jsx","index.js","musicplayer/music sync /^/.*/.mp3$"],"names":["module","exports","SongsContext","createContext","Context","state","list","songs","img","infoObj","title","artist","album","genre","year","song","i","selected","activeSong","isPlay","componentDidMount","setDetails","handlePlayPause","setState","require","read","onSuccess","e","image","tags","picture","str","j","data","length","String","fromCharCode","o","format","window","btoa","console","log","push","playNext","setPlayTrue","playPrev","setSong","index","Provider","value","this","props","children","Component","Playlist","tabValue","handleTabs","newValue","Consumer","object","AppBar","position","className","Tabs","onChange","variant","scrollButtons","style","padding","indicatorColor","Tab","label","fontSize","minWidth","wrapped","fullWidth","disableRipple","List","appearAnimation","enterAnimation","staggerDelayBy","map","ListItem","button","onClick","checkforlike","resetSong","Grid","container","spacing","justify","item","src","xs","direction","color","Typography","fontWeight","textTransform","overflow","textOverflow","height","Divider","Home","volume","snackBarMessage","obj","play","songPosition","shuffle","repeatOne","snackBarOpen","slideOpen","loading","isLiked","handleVolume","audioref","current","playPause","pause","handleSongPosition","currentTime","duration","changeSlide","setInterval","x","songEnded","repeatSong","setTimeout","likeUnlike","localStorage","removeItem","setItem","checkForLike","action","getItem","React","createRef","ref","type","onEnded","random","Math","floor","onPlaying","Paper","elevation","align","Skeleton","width","Slider","Fab","backgroundColor","boxShadow","size","alignItems","Checkbox","icon","checkedIcon","checked","dissbleRipple","ClickAwayListener","onClickAway","Snackbar","open","message","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Slide","in","bottom","left","timeout","enter","exit","background","defaultValue","onMouseUp","Favourite","overflowX","Wrapper","tab","DrawerOpen","currentSongOpen","DialogOpen","handleCurrentSongSlide","handleDialog","HomeRef","basename","location","pathname","textAlign","cursor","Button","path","exact","paddingRight","top","gutterBottom","component","Link","to","ListItemText","zIndex","Dialog","DialogContent","ReactDOM","render","document","getElementById","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","code","keys","Object","resolve"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,mJCE9BC,EAAeC,0BAEfC,EAAb,4MACEC,MAAQ,CACNC,KAAM,CACJ,eACA,mBACA,UACA,gBACA,iBACA,cACA,cACA,YACA,iBACA,YACA,iBACA,WACA,kBACA,WACA,cACA,SACA,cACA,YACA,UACA,QACA,OACA,QACA,UACA,YACA,UACA,cACA,YACA,UAEFC,MAAO,CACL,CACEC,IAAK,KACLC,QAAS,CACPC,MAAO,GACPC,OAAQ,MACRC,MAAO,GACPC,MAAO,GACPC,KAAM,MAERC,KAAM,iBAGVC,EAAG,EACHC,SAAU,CACRT,IAAK,KACLC,QAAS,CACPC,MAAO,GACPC,OAAQ,MACRC,MAAO,GACPC,MAAO,GACPC,KAAM,MAERC,KAAM,WAGRG,WAAY,EACZC,QAAQ,GA3DZ,EA6DEC,kBAAoB,WAClB,EAAKC,cA9DT,EAiEEC,gBAAkB,WAChB,EAAKC,SAAS,CAAEJ,QAAS,EAAKd,MAAMc,UAlExC,EAsEEE,WAAa,WACOG,EAAQ,IACdC,KAAZ,sCACiCD,MAAQ,YACrC,EAAKnB,MAAMC,KAAK,EAAKD,MAAMW,GADS,UAGtC,CACEU,UAAW,SAACC,GAGV,IAFA,IAAIC,EAAQD,EAAEE,KAAKC,QACfC,EAAM,GACDC,EAAI,EAAGA,EAAIJ,EAAMK,KAAKC,OAAQF,IACrCD,GAAOI,OAAOC,aAAaR,EAAMK,KAAKD,IAExC,IAYMzB,EAXF8B,EAAI,CACN7B,IAFW,QAAUoB,EAAMU,OAAS,WAAaC,OAAOC,KAAKT,GAG7DtB,QAASkB,EAAEE,KACXd,KAAM,EAAKV,MAAMC,KAAK,EAAKD,MAAMW,KAEnCyB,QAAQC,IAAIL,GACQ,GAAhB,EAAKhC,MAAMW,KACTT,EAAQ,IACNoC,KAAKN,GACX,EAAKd,SAAS,CAAEhB,QAAOU,SAAUoB,OAE7B9B,EAAQ,EAAKF,MAAME,OACjBoC,KAAKN,GACX,EAAKd,SAAS,CAAEhB,WAElB,EAAKgB,SAAS,CAAEP,EAAG,EAAKX,MAAMW,EAAI,IACb,KAAjB,EAAKX,MAAMW,GACb,EAAKK,iBArGjB,EA6GEuB,SAAW,WACT,IAAI1B,EAAa,EAAKb,MAAMa,WACT,KAAfA,EACFA,EAAa,EAEbA,GAA0B,EAE5B,EAAKK,SAAS,CAAEL,eAChB,EAAK2B,eArHT,EAyHEC,SAAW,WACT,IAAI5B,EAAa,EAAKb,MAAMa,WACT,IAAfA,EACFA,EAAa,GAEbA,GAA0B,EAE5B,EAAKK,SAAS,CAAEL,eAChB,EAAK2B,eAjIT,EAmIEE,QAAU,SAACC,GACT,EAAKzB,SAAS,CAAEL,WAAY8B,KApIhC,EAyIEH,YAAc,WACZ,EAAKtB,SAAS,CAAEJ,QAAQ,KA1I5B,uDA8II,OACE,kBAACjB,EAAa+C,SAAd,CACEC,MAAO,CACL3C,MAAO4C,KAAK9C,MAAME,MAClBD,KAAM6C,KAAK9C,MAAMC,KACjByC,QAASI,KAAKJ,QACd7B,WAAYiC,KAAK9C,MAAMa,WACvB4B,SAAUK,KAAKL,SACfF,SAAUO,KAAKP,SACftB,gBAAiB6B,KAAK7B,gBACtBH,OAAQgC,KAAK9C,MAAMc,OACnB0B,YAAaM,KAAKN,cAGnBM,KAAKC,MAAMC,cA5JpB,GAA6BC,a,uKC2YdC,E,4MA3XblD,MAAQ,CACNmD,SAAU,G,EAGZC,WAAa,SAAC9B,EAAG+B,GACf,EAAKnC,SAAS,CAAEiC,SAAUE,K,uDAElB,IAAD,OACP,OACE,kBAACxD,EAAayD,SAAd,MACG,SAACC,GACA,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAU,UAClC,kBAACC,EAAA,EAAD,CACEd,MAAO,EAAK7C,MAAMmD,SAClBS,SAAU,EAAKR,WACfS,QAAQ,aACRC,cAAc,MACdC,MAAO,CAAEC,QAAS,GAClBC,eAAe,WAEf,kBAACC,EAAA,EAAD,CACEC,MAAM,YACNJ,MAAO,CACLK,SAAU,UACVC,SAAU,SAEZC,SAAO,EACPC,WAAS,EACTC,eAAa,IAEf,kBAACN,EAAA,EAAD,CACEC,MAAM,SACNJ,MAAO,CACLK,SAAU,UACVC,SAAU,SAEZG,eAAa,IAEf,kBAACN,EAAA,EAAD,CACEC,MAAM,QACNJ,MAAO,CAAEK,SAAU,UAAWC,SAAU,SACxCG,eAAa,IAEf,kBAACN,EAAA,EAAD,CACEC,MAAM,UACNJ,MAAO,CAAEK,SAAU,UAAWC,SAAU,SACxCG,eAAa,IAEf,kBAACN,EAAA,EAAD,CACEC,MAAM,QACNJ,MAAO,CAAEK,SAAU,UAAWC,SAAU,SACxCG,eAAa,MAInB,kBAAC,IAAD,CAAgB7B,MAAO,EAAK3C,MAAMmD,UAChC,kBAACsB,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,gBAAgB,OAChBC,eAAe,OACfC,eAAgB,KAEfrB,EAAOrD,MAAM2E,KAAI,SAACvD,EAAGqB,GAAJ,OAChB,oCACE,kBAACmC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,WACPzB,EAAOb,QAAQC,GACf,EAAKI,MAAMkC,aAAatC,GACxB,EAAKI,MAAMmC,YACX3B,EAAOf,gBAGT,kBAAC2C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,iBAClC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,yBAAKC,IAAKlE,EAAEnB,OAEd,kBAACgF,EAAA,EAAD,CACEI,MAAI,EACJE,IAAE,EACFL,WAAS,EACTM,UAAU,SACV3B,MACER,EAAO1C,YAAc8B,EACjB,CAAEgD,MAAO,WACT,MAGN,kBAACR,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,QACRE,MAAO,CACL8B,WAAY,OACZC,cAAe,eAGhBxE,EAAEZ,OAGP,kBAACyE,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,YACRE,MAAO,CACLK,SAAU,SACV2B,SAAU,SACVC,aAAc,WACdC,OAAQ,SAGT3E,EAAElB,QAAQE,YAMrB,kBAAC4F,EAAA,EAAD,YAMR,6BACG3C,EAAOrD,MAAM2E,KAAI,SAACvD,EAAGqB,GACpB,GAAIA,GAAS,GAAKA,EAAQ,EACxB,OACE,oCACE,kBAACmC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,WACPzB,EAAOb,QAAQC,GACf,EAAKI,MAAMkC,aAAatC,GACxB,EAAKI,MAAMmC,YACX3B,EAAOf,gBAGT,kBAAC2C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,iBAClC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,yBAAKC,IAAKlE,EAAEnB,OAEd,kBAACgF,EAAA,EAAD,CACEI,MAAI,EACJE,IAAE,EACFL,WAAS,EACTM,UAAU,SACV3B,MACER,EAAO1C,YAAc8B,EACjB,CAAEgD,MAAO,WACT,MAGN,kBAACR,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,QACRE,MAAO,CACL8B,WAAY,OACZC,cAAe,eAGhBxE,EAAEZ,OAGP,kBAACyE,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,YACRE,MAAO,CACLK,SAAU,SACV2B,SAAU,SACVC,aAAc,WACdC,OAAQ,SAGT3E,EAAElB,QAAQE,YAMrB,kBAAC4F,EAAA,EAAD,WAMV,6BACG3C,EAAOrD,MAAM2E,KAAI,SAACvD,EAAGqB,GACpB,GAAIA,GAAS,GAAKA,EAAQ,GACxB,OACE,oCACE,kBAACmC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,WACPzB,EAAOb,QAAQC,GACf,EAAKI,MAAMkC,aAAatC,GACxB,EAAKI,MAAMmC,YACX3B,EAAOf,gBAGT,kBAAC2C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,iBAClC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,yBAAKC,IAAKlE,EAAEnB,OAEd,kBAACgF,EAAA,EAAD,CACEI,MAAI,EACJE,IAAE,EACFL,WAAS,EACTM,UAAU,SACV3B,MACER,EAAO1C,YAAc8B,EACjB,CAAEgD,MAAO,WACT,MAGN,kBAACR,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,QACRE,MAAO,CACL8B,WAAY,OACZC,cAAe,eAGhBxE,EAAEZ,OAGP,kBAACyE,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,YACRE,MAAO,CACLK,SAAU,SACV2B,SAAU,SACVC,aAAc,WACdC,OAAQ,SAGT3E,EAAElB,QAAQE,YAMrB,kBAAC4F,EAAA,EAAD,WAMV,6BACG3C,EAAOrD,MAAM2E,KAAI,SAACvD,EAAGqB,GACpB,GAAIA,GAAS,IAAMA,EAAQ,GACzB,OACE,oCACE,kBAACmC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,WACPzB,EAAOb,QAAQC,GACf,EAAKI,MAAMkC,aAAatC,GACxB,EAAKI,MAAMmC,YACX3B,EAAOf,gBAGT,kBAAC2C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,iBAClC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,yBAAKC,IAAKlE,EAAEnB,OAEd,kBAACgF,EAAA,EAAD,CACEI,MAAI,EACJE,IAAE,EACFL,WAAS,EACTM,UAAU,SACV3B,MACER,EAAO1C,YAAc8B,EACjB,CAAEgD,MAAO,WACT,MAGN,kBAACR,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,QACRE,MAAO,CACL8B,WAAY,OACZC,cAAe,eAGhBxE,EAAEZ,OAGP,kBAACyE,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE7B,MAAO,CACLK,SAAU,SACV2B,SAAU,SACVC,aAAc,WACdC,OAAQ,SAGT3E,EAAElB,QAAQE,YAMrB,kBAAC4F,EAAA,EAAD,WAMV,6BACG3C,EAAOrD,MAAM2E,KAAI,SAACvD,EAAGqB,GACpB,GAAIA,GAAS,IAAMA,EAAQY,EAAOrD,MAAM2B,OACtC,OACE,oCACE,kBAACiD,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,WACPzB,EAAOb,QAAQC,GACf,EAAKI,MAAMkC,aAAatC,GACxB,EAAKI,MAAMmC,YACX3B,EAAOf,gBAGT,kBAAC2C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,iBAClC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,yBAAKC,IAAKlE,EAAEnB,OAEd,kBAACgF,EAAA,EAAD,CACEI,MAAI,EACJE,IAAE,EACFL,WAAS,EACTM,UAAU,SACV3B,MACER,EAAO1C,YAAc8B,EACjB,CAAEgD,MAAO,WACT,MAGN,kBAACR,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,QACRE,MAAO,CACL8B,WAAY,OACZC,cAAe,eAGhBxE,EAAEZ,OAGP,kBAACyE,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,YACRE,MAAO,CACLK,SAAU,SACV2B,SAAU,SACVC,aAAc,WACdC,OAAQ,SAGT3E,EAAElB,QAAQE,YAMrB,kBAAC4F,EAAA,EAAD,oB,GA7WHjD,a,+QCgbRkD,G,kDA/Yb,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IAhBR/C,MAAQ,CACNoG,OAAQ,GACRC,gBAAiB,GACjBC,IAAK,KACLC,MAAM,EACNC,aAAc,EACdrG,IAAK,KACLsG,SAAS,EACTC,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,SAAS,EAETC,SAAS,GAEQ,EAMnBC,aAAe,SAACzF,EAAG+B,GACjB,EAAK2D,SAASC,QAAQb,OAAS/C,EAAW,IAC1C,EAAKnC,SAAS,CAAEkF,OAAQ/C,KARP,EAYnB6D,UAAY,WACN,EAAKlH,MAAMuG,KACb,EAAKS,SAASC,QAAQE,QAEtB,EAAKH,SAASC,QAAQV,OAExB,EAAKrF,SAAS,CAAEqF,MAAO,EAAKvG,MAAMuG,QAlBjB,EAsBnBa,mBAAqB,SAAC9F,EAAG+B,GACvB,EAAK2D,SAASC,QAAQI,YACpB,EAAKL,SAASC,QAAQK,UAAYjE,EAAW,KAC/C,EAAKnC,SAAS,CAAEsF,aAAcnD,KAzBb,EA6BnBkE,YAAc,WACZC,aAAY,WACV,IAAIC,EACF,EAAKT,SAASC,QAAQI,aACrB,IAAM,EAAKL,SAASC,QAAQK,UAC/B,EAAKpG,SAAS,CAAEsF,aAAciB,MAC7B,MAnCc,EAuCnBC,UAAY,aAvCO,EA0CnBC,WAAa,WACX,EAAKX,SAASC,QAAQV,OACtB,EAAKrF,SAAS,CAAEqF,MAAM,KA5CL,EAgDnBrB,UAAY,WACV,EAAKhE,SAAS,CAAEqF,MAAM,IACtB,EAAKrF,SAAS,CAAEsF,aAAc,IAC9B,EAAKQ,SAASC,QAAQI,YAAc,EACpCO,YAAW,WACT,EAAKZ,SAASC,QAAQV,SACrB,MAtDc,EA0DnBsB,WAAa,SAAClF,GACR,EAAK3C,MAAM8G,QACbgB,aAAaC,WAAWpF,GAExBmF,aAAaE,QAAQrF,EAAOA,IA9Db,EAmEnBsF,aAAe,SAACC,EAAQvF,GACR,QAAVuF,GAEY,IADdvF,GAAgB,KAEdA,EAAQ,IAES,UAAVuF,EACTvF,EAAQA,EAGK,KADbA,GAAgB,KAGdA,EAAQ,GAIH,MADDmF,aAAaK,QAAQxF,GAE3B,EAAKzB,SAAS,CAAE4F,SAAS,IAEzB,EAAK5F,SAAS,CAAE4F,SAAS,KApF3B,EAAKE,SAAW,IAAIoB,IAAMC,UAFT,E,qDAyFT,IAAD,OACP,OACE,oCACE,kBAACxI,EAAayD,SAAd,MACG,SAACC,GACA,OACE,oCACE,2BACE+E,IAAK,EAAKtB,SACVxB,IAAKrE,MAAQ,YACXoC,EAAOrD,MAAMqD,EAAO1C,YAAYH,KADtB,SAGZ6H,KAAK,YACLC,QAAS,WAIP,GAHA,EAAKtH,SAAS,CAAEsF,aAAc,IAC9B,EAAKQ,SAASC,QAAQI,YAAc,EACpC,EAAKnG,SAAS,CAAEqF,MAAM,IAClB,EAAKvG,MAAM0G,UACb,EAAKiB,kBACA,GAAI,EAAK3H,MAAMyG,QAAS,CAC7B,IAAIgC,EAASC,KAAKC,MAAsB,GAAhBD,KAAKD,UAC7BlF,EAAOb,QAAQ+F,GACf,EAAKR,aAAa,SAAUQ,GAC5B,EAAKvD,iBAEL,EAAKA,YACL3B,EAAOhB,WACP,EAAK0F,aAAa,OAAQ1E,EAAO1C,aAGrC+H,UAAW,EAAKrB,cAGlB,kBAACsB,EAAA,EAAD,CACEnF,UAAU,qBACVoF,UAAW,EACX/E,MAAO,CAAEN,SAAU,aAEnB,yBAAKC,UAAU,eACZH,EAAOrD,MAAMqD,EAAO1C,YAAYT,QAAQC,OAE3C,kBAACuF,EAAA,EAAD,CACE/B,QAAQ,UACRkF,MAAM,OACNrF,UAAU,gBAETH,EAAOrD,MAAMqD,EAAO1C,YAAYT,QAAQE,QAE3C,yBAAKoD,UAAU,eACZ,EAAK1D,MAAM6G,QACV,kBAACmC,GAAA,EAAD,CAAUnF,QAAQ,SAASH,UAAU,aAErC,yBACE8B,IAAKjC,EAAOrD,MAAMqD,EAAO1C,YAAYV,IACrC4D,MAAO,CAAEkF,MAAO,OAAQhD,OAAQ,WAItC,yBAAKvC,UAAU,gBACb,kBAACwF,EAAA,EAAD,CACEtF,SAAU,EAAKwD,mBACfvE,MAAO,EAAK7C,MAAMwG,aAClBzC,MAAO,CAAEkF,MAAO,QAChBvF,UAAU,kBAGd,kBAACyB,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,UACtB,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GACb,kBAAC0D,EAAA,EAAD,CACEnE,QAAS,WACP,EAAKE,YACL3B,EAAOd,WACP,EAAKwF,aAAa,OAAQ1E,EAAO1C,aAEnCkD,MAAO,CACL4B,MAAO,QACPyD,gBAAiB,cACjBC,UAAW,QAEbC,KAAK,SAEL,kBAAC,IAAD,CAAkBA,KAAK,YAG3B,kBAACnE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GACb,kBAAC0D,EAAA,EAAD,CACEnE,QAAS,WACP,EAAKkC,YACL3D,EAAOtC,mBAET8C,MAAO,CAAE4B,MAAO,QAASyD,gBAAiB,SAC1CE,KAAK,SAEJ,EAAKtJ,MAAMuG,KACV,kBAAC,IAAD,CAAW+C,KAAK,UAEhB,kBAAC,IAAD,CAAeA,KAAK,YAI1B,kBAACnE,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GACb,kBAAC0D,EAAA,EAAD,CACEnE,QAAS,WACP,EAAKE,YACL3B,EAAOhB,WACP,EAAK0F,aAAa,OAAQ1E,EAAO1C,aAEnCkD,MAAO,CACL4B,MAAO,QACPyD,gBAAiB,cACjBC,UAAW,QAEbC,KAAK,SAEL,kBAAC,IAAD,CAAcA,KAAK,aAIzB,kBAACnE,EAAA,EAAD,CACEC,WAAS,EACTE,QAAQ,SACRiE,WAAW,SACX7F,UAAU,cAEV,kBAACyB,EAAA,EAAD,CAAMI,MAAI,EAACE,IAAE,GACX,kBAAC0D,EAAA,EAAD,CACEpF,MAAO,CACL4B,MAAO,QACPyD,gBAAiB,cACjBC,UAAW,QAEb7E,eAAa,GAEb,kBAACgF,EAAA,EAAD,CACEC,KAAM,kBAAC,IAAD,CAAYH,KAAK,QAAQ9E,eAAa,IAC5CkF,YACE,kBAAC,KAAD,CAAaJ,KAAK,QAAQ9E,eAAa,IAEzC8E,KAAK,QACLK,QAAS,EAAK3J,MAAMyG,QACpB7C,SAAU,WACR,IAAI6D,EAAI,EAAKzH,MAAMyG,QACfgB,EACF,EAAKvG,SAAS,CACZmF,gBAAiB,eAGnB,EAAKnF,SAAS,CACZmF,gBAAiB,eAGrB,EAAKnF,SAAS,CACZuF,SAAUgB,EACVd,cAAc,SAMxB,kBAACxB,EAAA,EAAD,CAAMI,MAAI,EAACE,IAAE,GACX,kBAAC0D,EAAA,EAAD,CACEpF,MAAO,CACL4B,MAAO,QACPyD,gBAAiB,cACjBC,UAAW,QAEb7E,eAAa,GAEb,kBAACgF,EAAA,EAAD,CACEC,KAAM,kBAAC,KAAD,CAAgBH,KAAK,QAAQ9E,eAAa,IAChDkF,YAAa,kBAAC,IAAD,CAAUJ,KAAK,QAAQM,eAAa,IACjDN,KAAK,QACLK,QAAS,EAAK3J,MAAM8G,QACpBlD,SAAU,WACR,EAAKiE,WAAWtE,EAAO1C,YAClB,EAAKb,MAAM8G,SACd,EAAK5F,SAAS,CACZyF,cAAc,EACdN,gBAAiB,wBAGrB,EAAKnF,SAAS,CAAE4F,SAAU,EAAK9G,MAAM8G,eAK7C,kBAAC3B,EAAA,EAAD,CAAMI,MAAI,EAACE,IAAE,GACX,kBAACoE,EAAA,EAAD,CACEC,YAAa,WACX,EAAK5I,SAAS,CAAE0F,WAAW,MAG7B,kBAACuC,EAAA,EAAD,CACEpF,MAAO,CACL4B,MAAO,QACPyD,gBAAiB,cACjBC,UAAW,QAEb7E,eAAa,EACbQ,QAAS,WACP,EAAK9D,SAAS,CACZ0F,WAAY,EAAK5G,MAAM4G,cAIL,GAArB,EAAK5G,MAAMoG,OACV,kBAAC,KAAD,CAAekD,KAAK,UAEpB,kBAAC,IAAD,CAAcA,KAAK,aAK3B,kBAACnE,EAAA,EAAD,CAAMI,MAAI,EAACE,IAAE,GACX,kBAAC0D,EAAA,EAAD,CACEpF,MAAO,CACL4B,MAAO,QACPyD,gBAAiB,cACjBC,UAAW,QAEb7E,eAAa,GAEb,kBAACgF,EAAA,EAAD,CACEC,KAAM,kBAAC,IAAD,CAAeH,KAAK,UAC1BI,YACE,kBAAC,IAAD,CACEJ,KAAK,QACLvF,MAAO,CAAE4B,MAAO,SAGpB2D,KAAK,QACLK,QAAS,EAAK3J,MAAM0G,UACpB9C,SAAU,WACR,IAAI6D,EAAI,EAAKzH,MAAM0G,UACfe,EACF,EAAKvG,SAAS,CACZmF,gBAAiB,yBAGnB,EAAKnF,SAAS,CACZmF,gBAAiB,kBAGrB,EAAKnF,SAAS,CACZwF,WAAYe,EACZd,cAAc,UAO1B,kBAACoD,EAAA,EAAD,CACEC,KAAM,EAAKhK,MAAM2G,aACjBsD,QAAS,EAAKjK,MAAMqG,gBACpB6D,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,KAClBC,QAAS,WACP,EAAKpJ,SAAS,CAAEyF,cAAc,OAIlC,kBAAC4D,EAAA,EAAD,CACE7E,UAAU,KACV8E,GAAI,EAAKxK,MAAM4G,UACf7C,MAAO,CAAEN,SAAU,WAAYgH,OAAQ,EAAGC,KAAM,GAChDC,QAAS,CACPC,MAAO,IACPC,KAAM,MAGR,kBAAChC,EAAA,EAAD,CACEnF,UAAU,sBACVK,MAAO,CAAE+G,WAAY,eAErB,yBAAKpH,UAAU,iBACb,6BACwB,GAArB,EAAK1D,MAAMoG,OACV,kBAAC,KAAD,CAAekD,KAAK,UAEpB,kBAAC,KAAD,CAAgBA,KAAK,WAGzB,kBAACJ,EAAA,EAAD,CACEnF,MAAO,CAAEkF,MAAO,OAChBrF,SAAU,EAAKmD,aACfgE,aAAc,GACdC,UAAW,WACT,EAAK9J,SAAS,CAAE0F,WAAW,OAG/B,6BACE,kBAAC,IAAD,CAAc0C,KAAK,wB,GAhZ1BrG,a,gFCgDJgI,G,4MAvEbjL,MAAQ,G,uDACE,IAAD,OACP,OACE,kBAACH,EAAayD,SAAd,MACG,SAACC,GACA,OACE,kBAACkB,EAAA,EAAD,KACGlB,EAAOrD,MAAM2E,KAAI,SAACvD,EAAGqB,GAEpB,GAAS,MADDmF,aAAaK,QAAQxF,GAE3B,OACE,oCACE,kBAACmC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,WACPzB,EAAOb,QAAQC,GACf,EAAKI,MAAMkC,aAAatC,GACxB,EAAKI,MAAMmC,YACX3B,EAAOf,gBAGT,kBAAC2C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,iBAClC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,yBAAKC,IAAKlE,EAAEnB,OAEd,kBAACgF,EAAA,EAAD,CACEI,MAAI,EACJE,IAAE,EACFL,WAAS,EACTM,UAAU,SACV3B,MACER,EAAO1C,YAAc8B,EACjB,CAAEgD,MAAO,WACT,MAGN,kBAACR,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,QACRE,MAAO,CACL8B,WAAY,OACZC,cAAe,eAGhBxE,EAAEZ,OAGP,kBAACyE,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,YACRE,MAAO,CAAEmH,UAAW,WAEnB5J,EAAElB,QAAQE,YAMrB,kBAAC4F,EAAA,EAAD,kB,GA3DEjD,a,oBCoSTkI,G,kDAvQb,WAAYpI,GAAQ,IAAD,8BACjB,cAAMA,IATR/C,MAAQ,CACNoL,IAAK,EACLvE,SAAS,EACTwE,YAAY,EACZC,iBAAiB,EACjBC,YAAY,GAGK,EAKnBC,uBAAyB,WACvB,EAAKtK,SAAS,CAAEoK,iBAAkB,EAAKtL,MAAMsL,mBAN5B,EAUnBG,aAAe,WACb,EAAKvK,SAAS,CAAEqK,YAAa,EAAKvL,MAAMuL,cATxC,EAAKG,QAAU,IAAItD,IAAMC,UAFR,E,qDAaT,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAACxI,EAAayD,SAAd,MACG,SAACC,GACA,OACE,kBAAC,IAAD,CAAQoI,SAAUzJ,OAAO0J,SAASC,UAAY,IAC5C,kBAAChD,EAAA,EAAD,CAAOnF,UAAU,gBAAgBoF,UAAW,GAC1C,kBAAC3D,EAAA,EAAD,CACEC,WAAS,EACTE,QAAQ,SACRiE,WAAW,SACX7F,UAAU,cAEV,kBAACyB,EAAA,EAAD,CACEI,MAAI,EACJE,IAAE,EACF1B,MAAO,CACL+H,UAAW,WAGb,kBAACjC,EAAA,EAAD,CACEC,YAAa,WACX,EAAK5I,SAAS,CAAEmK,YAAY,MAG7B,EAAKrL,MAAMsL,gBACV,kBAAC,KAAD,CACEhC,KAAK,QACLtE,QAAS,EAAKwG,uBACdzH,MAAO,CAAE4B,MAAO,QAASoG,OAAQ,aAGnC,kBAAC,KAAD,CACEzC,KAAK,QACLvF,MAAO,CAAE4B,MAAO,QAASoG,OAAQ,WACjC/G,QAAS,WACP,EAAK9D,SAAS,CAAEmK,YAAY,SAMtC,kBAAClG,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,GACb,kBAACG,EAAA,EAAD,CAAYmD,MAAM,SAASlF,QAAQ,KAAKH,UAAU,SAC/C,EAAK1D,MAAMsL,gBAAkB,cAAgB,QAAS,MAG3D,kBAACnG,EAAA,EAAD,CAAMI,MAAI,EAACE,IAAE,GACV,EAAKzF,MAAMsL,iBACV,kBAACU,EAAA,EAAD,CAAQhH,QAAS,EAAKyG,aAAcjH,eAAa,GAC/C,kBAAC,KAAD,CAAU8E,KAAK,QAAQvF,MAAO,CAAE4B,MAAO,cAK/C,kBAAC,IAAD,CAAOsG,KAAK,IAAIC,OAAK,GACnB,yBAAKxI,UAAU,aACb,kBAAC,EAAD,CACEuB,aAAc,SAACtC,GACb,EAAK+I,QAAQzE,QAAQgB,aAAa,SAAUtF,IAE9CuC,UAAW,WACT,EAAKwG,QAAQzE,QAAQ/B,iBAK7B,kBAAC,IAAD,CAAO+G,KAAK,OAAOC,OAAK,GACtB,yBAAKxI,UAAU,aACb,kBAAC,GAAD,CACEuB,aAAc,SAACtC,GACb,EAAK+I,QAAQzE,QAAQgB,aAAa,SAAUtF,IAE9CuC,UAAW,WACT,EAAKwG,QAAQzE,QAAQ/B,iBAK7B,kBAAC2D,EAAA,EAAD,CAAOnF,UAAU,sBAAsBoF,UAAW,GAChD,kBAAChE,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,EAAKwG,wBAC7B,kBAACrG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,iBAClC,kBAACH,EAAA,EAAD,CAAMI,MAAI,GACR,yBAAKC,IAAKjC,EAAOrD,MAAMqD,EAAO1C,YAAYV,OAE5C,kBAACgF,EAAA,EAAD,CAAMI,MAAI,EAACE,IAAE,EAACL,WAAS,EAACM,UAAU,UAChC,kBAACP,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,QACRE,MAAO,CACL8B,WAAY,OACZC,cAAe,eAGhBvC,EAAOrD,MAAMqD,EAAO1C,YAAYH,OAGrC,kBAACyE,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACK,EAAA,EAAD,CACE/B,QAAQ,YACRE,MAAO,CACLmH,UAAW,SAEXjF,OAAQ,OACRD,aAAc,aAGfzC,EAAOrD,MAAMqD,EAAO1C,YAAYT,QAAQE,UAI/C,kBAAC6E,EAAA,EAAD,CAAMI,MAAI,EAACxB,MAAO,CAAEoI,aAAc,SAChC,yBAAKzI,UAAWH,EAAOzC,OAAS,WAAa,MAC3C,yBAAK4C,UAAU,QACf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,eAMzB,kBAAC6G,EAAA,EAAD,CACE7E,UAAU,QACV8E,GAAI,EAAKxK,MAAMqL,WACftH,MAAO,CACLN,SAAU,WACV2I,IAAK,EACL1B,KAAM,EACNzB,MAAO,QACPhD,OAAQ,QAEV0E,QAAS,CACPC,MAAO,IACPC,KAAM,MAGR,yBAAK9G,MAAO,CAAEkF,MAAO,SAAWvF,UAAU,SACxC,kBAACkC,EAAA,EAAD,CACEyG,cAAY,EACZtD,MAAM,QACNhF,MAAO,CAAEoI,aAAc,SAEvB,kBAAC,KAAD,CACEpI,MAAO,CAAEgI,OAAQ,WACjB/G,QAAS,WACP,EAAK9D,SAAS,CAAEmK,YAAY,QAIlC,kBAAC5G,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAUC,QAAM,EAACuH,UAAWC,IAAMC,GAAG,KACnC,kBAACC,EAAA,EAAD,KACE,kBAAC7G,EAAA,EAAD,CAAY/B,QAAQ,QAAQkF,MAAM,QAChC,kBAAC,KAAD,CAAeO,KAAK,UADtB,gBAKJ,kBAACpD,EAAA,EAAD,MACA,kBAACpB,EAAA,EAAD,CAAUC,QAAM,EAACuH,UAAWC,IAAMC,GAAG,QACnC,kBAACC,EAAA,EAAD,KACE,kBAAC7G,EAAA,EAAD,CAAY/B,QAAQ,QAAQkF,MAAM,QAChC,kBAAC,IAAD,CAAcO,KAAK,UADrB,oBASV,kBAACiB,EAAA,EAAD,CACEC,GAAI,EAAKxK,MAAMsL,gBACf5F,UAAU,KACV3B,MAAO,CACLN,SAAU,WACVgH,OAAQ,EACRC,KAAM,EACNzB,MAAO,OACPhD,OAAQ,QACRyG,OAAQ,KAEV/B,QAAS,CACPC,MAAO,IACPC,KAAM,MAGR,kBAAChC,EAAA,EAAD,KACE,kBAAC,GAAD,CAAMP,IAAK,EAAKoD,YAGpB,kBAACiB,EAAA,EAAD,CACE3C,KAAM,EAAKhK,MAAMuL,WACjBjB,QAAS,EAAKmB,aACd1H,MAAO,CAAE2I,OAAQ,aAEjB,kBAACE,EAAA,EAAD,CAAe7I,MAAO,CAAEC,QAAS,IAC/B,kBAACS,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,KACE,kBAAC2H,EAAA,EAAD,KACE,kBAAC7G,EAAA,EAAD,CAAY/B,QAAQ,SAApB,UACU,IACPN,EAAOrD,MAAMqD,EAAO1C,YAAYT,QAAQC,SAI/C,kBAACyE,EAAA,EAAD,KACE,kBAAC2H,EAAA,EAAD,KACE,kBAAC7G,EAAA,EAAD,CAAY/B,QAAQ,SAApB,UACU,IACPN,EAAOrD,MAAMqD,EAAO1C,YAAYT,QAAQG,SAI/C,kBAACuE,EAAA,EAAD,KACE,kBAAC2H,EAAA,EAAD,KACE,kBAAC7G,EAAA,EAAD,CAAY/B,QAAQ,SAApB,UACU,IACPN,EAAOrD,MAAMqD,EAAO1C,YAAYT,QAAQI,SAI/C,kBAACsE,EAAA,EAAD,KACE,kBAAC2H,EAAA,EAAD,KACE,kBAAC7G,EAAA,EAAD,CAAY/B,QAAQ,SAApB,WACW,IACRN,EAAOrD,MAAMqD,EAAO1C,YAAYT,QAAQE,UAI/C,kBAACwE,EAAA,EAAD,KACE,kBAAC2H,EAAA,EAAD,KACE,kBAAC7G,EAAA,EAAD,CAAY/B,QAAQ,SAApB,kBACkB,IACfN,EAAOrD,MAAMqD,EAAO1C,YAAYT,QAAQK,qB,GA/PjDwC,aC3BtB4J,IAASC,OAAO,kBAAC,GAAD,MAAaC,SAASC,eAAe,U,mBCLrD,IAAInI,EAAM,CACT,iBAAkB,IAClB,oBAAqB,IACrB,gBAAiB,IACjB,oBAAqB,IACrB,cAAe,IACf,wBAAyB,IACzB,iBAAkB,IAClB,kBAAmB,IACnB,uBAAwB,IACxB,kBAAmB,IACnB,qBAAsB,IACtB,oBAAqB,IACrB,uBAAwB,IACxB,eAAgB,IAChB,qBAAsB,IACtB,oBAAqB,IACrB,kBAAmB,IACnB,sBAAuB,IACvB,kBAAmB,IACnB,yBAA0B,IAC1B,uBAAwB,IACxB,aAAc,IACd,cAAe,IACf,gBAAiB,IACjB,kBAAmB,IACnB,oBAAqB,IACrB,gBAAiB,IACjB,eAAgB,IAChB,gBAAiB,KAIlB,SAASoI,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBrL,EAAE6C,EAAKqI,GAAM,CACpC,IAAI5L,EAAI,IAAIgM,MAAM,uBAAyBJ,EAAM,KAEjD,MADA5L,EAAEiM,KAAO,mBACHjM,EAEP,OAAOuD,EAAIqI,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAK3I,IAEpBoI,EAAeS,QAAUN,EACzBzN,EAAOC,QAAUqN,EACjBA,EAAeE,GAAK,I","file":"static/js/main.e57b931e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bomdiggy.f27b15bd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Butta Bomma.957119a0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Emo Emo.b9656229.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Endhuko Emo.eb94fa12.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Faded.8cbc580b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Haan Main Galat.3b43bc8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Hawayein.3add829c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Ik Variaa.66cdf415.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Illegal Weapon.7399644f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Inka Edho.bddd0ee3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Kudukku song.ad29d069.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Kutti story.32f1e41c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Maatevinadhuga.9fa80226.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Malang.a9f834fd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Manasu Maree.96fc4bc2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/O saki saki.dc47aaad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Pachtaoge.056cf2d6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Ramulo Ramula.9059fe26.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Rowdybaby.0f489c78.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Samajavaragamana.ba5665a8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Singles Anthem.a78ad68c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Solo.b7ea04a5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Sorry.075e0ea5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Starboy.ee12e1ab.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Taki Taki.0fb149e0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Thodi jagah.5cfc06ad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Thunder.b94c98b1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Yaanji.967021be.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sanamre.d8e9d52f.mp3\";","import React, { Component, createContext } from \"react\";\r\n\r\nexport const SongsContext = createContext();\r\n\r\nexport class Context extends Component {\r\n  state = {\r\n    list: [\r\n      \"Manasu Maree\",\r\n      \"Samajavaragamana\",\r\n      \"Emo Emo\",\r\n      \"Ramulo Ramula\",\r\n      \"Singles Anthem\",\r\n      \"Endhuko Emo\",\r\n      \"Butta Bomma\",\r\n      \"Inka Edho\",\r\n      \"Maatevinadhuga\",\r\n      \"Ik Variaa\",\r\n      \"Illegal Weapon\",\r\n      \"Bomdiggy\",\r\n      \"Haan Main Galat\",\r\n      \"Hawayein\",\r\n      \"Thodi jagah\",\r\n      \"Malang\",\r\n      \"O saki saki\",\r\n      \"Pachtaoge\",\r\n      \"sanamre\",\r\n      \"Faded\",\r\n      \"Solo\",\r\n      \"Sorry\",\r\n      \"Starboy\",\r\n      \"Taki Taki\",\r\n      \"Thunder\",\r\n      \"Kutti story\",\r\n      \"Rowdybaby\",\r\n      \"Yaanji\",\r\n    ],\r\n    songs: [\r\n      {\r\n        img: null,\r\n        infoObj: {\r\n          title: \"\",\r\n          artist: \"sai\",\r\n          album: \"\",\r\n          genre: \"\",\r\n          year: 2020,\r\n        },\r\n        song: \"Manasu Maree\",\r\n      },\r\n    ],\r\n    i: 0,\r\n    selected: {\r\n      img: null,\r\n      infoObj: {\r\n        title: \"\",\r\n        artist: \"sai\",\r\n        album: \"\",\r\n        genre: \"\",\r\n        year: 2020,\r\n      },\r\n      song: \"inkaedo\",\r\n    },\r\n\r\n    activeSong: 0,\r\n    isPlay: false,\r\n  };\r\n  componentDidMount = () => {\r\n    this.setDetails();\r\n  };\r\n  // display the animation in wrapper only when a song is playing\r\n  handlePlayPause = () => {\r\n    this.setState({ isPlay: !this.state.isPlay });\r\n  };\r\n\r\n  //create the songs list\r\n  setDetails = () => {\r\n    var jsmediatags = require(\"jsmediatags\");\r\n    jsmediatags.read(\r\n      `https://saiteja623.github.io${require(`./music/${\r\n        this.state.list[this.state.i]\r\n      }.mp3`)}`,\r\n      {\r\n        onSuccess: (e) => {\r\n          var image = e.tags.picture;\r\n          var str = \"\";\r\n          for (var j = 0; j < image.data.length; j++) {\r\n            str += String.fromCharCode(image.data[j]);\r\n          }\r\n          var base64 = \"data:\" + image.format + \";base64,\" + window.btoa(str);\r\n          var o = {\r\n            img: base64,\r\n            infoObj: e.tags,\r\n            song: this.state.list[this.state.i],\r\n          };\r\n          console.log(o);\r\n          if (this.state.i == 0) {\r\n            var songs = [];\r\n            songs.push(o);\r\n            this.setState({ songs, selected: o });\r\n          } else {\r\n            var songs = this.state.songs;\r\n            songs.push(o);\r\n            this.setState({ songs });\r\n          }\r\n          this.setState({ i: this.state.i + 1 });\r\n          if (this.state.i !== 28) {\r\n            this.setDetails();\r\n          }\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  //play the next by increasing the index\r\n  playNext = () => {\r\n    var activeSong = this.state.activeSong;\r\n    if (activeSong === 27) {\r\n      activeSong = 0;\r\n    } else {\r\n      activeSong = activeSong + 1;\r\n    }\r\n    this.setState({ activeSong });\r\n    this.setPlayTrue();\r\n  };\r\n\r\n  //play the prev song by decreasing the index\r\n  playPrev = () => {\r\n    var activeSong = this.state.activeSong;\r\n    if (activeSong === 0) {\r\n      activeSong = 27;\r\n    } else {\r\n      activeSong = activeSong - 1;\r\n    }\r\n    this.setState({ activeSong });\r\n    this.setPlayTrue();\r\n  };\r\n  setSong = (index) => {\r\n    this.setState({ activeSong: index });\r\n  };\r\n\r\n  //set play to only to true\r\n\r\n  setPlayTrue = () => {\r\n    this.setState({ isPlay: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SongsContext.Provider\r\n        value={{\r\n          songs: this.state.songs,\r\n          list: this.state.list,\r\n          setSong: this.setSong,\r\n          activeSong: this.state.activeSong,\r\n          playPrev: this.playPrev,\r\n          playNext: this.playNext,\r\n          handlePlayPause: this.handlePlayPause,\r\n          isPlay: this.state.isPlay,\r\n          setPlayTrue: this.setPlayTrue,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </SongsContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { SongsContext } from \"./context\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Tab,\r\n  Tabs,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  AppBar,\r\n} from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport withRouter from \"react-router-dom\";\r\nimport \"./css/home.css\";\r\nimport SwipabeleViews from \"react-swipeable-views\";\r\n\r\nclass Playlist extends Component {\r\n  state = {\r\n    tabValue: 0,\r\n  };\r\n  //handles the tab changed\r\n  handleTabs = (e, newValue) => {\r\n    this.setState({ tabValue: newValue });\r\n  };\r\n  render() {\r\n    return (\r\n      <SongsContext.Consumer>\r\n        {(object) => {\r\n          return (\r\n            <>\r\n              <AppBar position=\"sticky\" className=\"appbar\">\r\n                <Tabs\r\n                  value={this.state.tabValue}\r\n                  onChange={this.handleTabs}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"off\"\r\n                  style={{ padding: 0 }}\r\n                  indicatorColor=\"primary\"\r\n                >\r\n                  <Tab\r\n                    label=\"All songs\"\r\n                    style={{\r\n                      fontSize: \"0.72rem\",\r\n                      minWidth: \"100px\",\r\n                    }}\r\n                    wrapped\r\n                    fullWidth\r\n                    disableRipple\r\n                  />\r\n                  <Tab\r\n                    label=\"Telugu\"\r\n                    style={{\r\n                      fontSize: \"0.72rem\",\r\n                      minWidth: \"100px\",\r\n                    }}\r\n                    disableRipple\r\n                  />\r\n                  <Tab\r\n                    label=\"Hindi\"\r\n                    style={{ fontSize: \"0.72rem\", minWidth: \"100px\" }}\r\n                    disableRipple\r\n                  />\r\n                  <Tab\r\n                    label=\"English\"\r\n                    style={{ fontSize: \"0.72rem\", minWidth: \"100px\" }}\r\n                    disableRipple\r\n                  />\r\n                  <Tab\r\n                    label=\"Other\"\r\n                    style={{ fontSize: \"0.72rem\", minWidth: \"100px\" }}\r\n                    disableRipple\r\n                  />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipabeleViews index={this.state.tabValue}>\r\n                <List>\r\n                  <FlipMove\r\n                    appearAnimation=\"fade\"\r\n                    enterAnimation=\"fade\"\r\n                    staggerDelayBy={1000}\r\n                  >\r\n                    {object.songs.map((e, index) => (\r\n                      <>\r\n                        <ListItem\r\n                          button\r\n                          onClick={() => {\r\n                            object.setSong(index);\r\n                            this.props.checkforlike(index);\r\n                            this.props.resetSong();\r\n                            object.setPlayTrue();\r\n                          }}\r\n                        >\r\n                          <Grid container spacing={2} justify=\"space-between\">\r\n                            <Grid item>\r\n                              <img src={e.img} />\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs\r\n                              container\r\n                              direction=\"column\"\r\n                              style={\r\n                                object.activeSong == index\r\n                                  ? { color: \"#ff3b57\" }\r\n                                  : null\r\n                              }\r\n                            >\r\n                              <Grid item>\r\n                                <Typography\r\n                                  variant=\"body2\"\r\n                                  style={{\r\n                                    fontWeight: \"bold\",\r\n                                    textTransform: \"capitalize\",\r\n                                  }}\r\n                                >\r\n                                  {e.song}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item>\r\n                                <Typography\r\n                                  variant=\"subtitle2\"\r\n                                  style={{\r\n                                    fontSize: \"0.8rem\",\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\",\r\n                                    height: \"20px\",\r\n                                  }}\r\n                                >\r\n                                  {e.infoObj.artist}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </ListItem>\r\n                        <Divider />\r\n                      </>\r\n                    ))}\r\n                  </FlipMove>\r\n                </List>\r\n\r\n                <div>\r\n                  {object.songs.map((e, index) => {\r\n                    if (index >= 0 && index < 9) {\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            button\r\n                            onClick={() => {\r\n                              object.setSong(index);\r\n                              this.props.checkforlike(index);\r\n                              this.props.resetSong();\r\n                              object.setPlayTrue();\r\n                            }}\r\n                          >\r\n                            <Grid container spacing={2} justify=\"space-between\">\r\n                              <Grid item>\r\n                                <img src={e.img} />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs\r\n                                container\r\n                                direction=\"column\"\r\n                                style={\r\n                                  object.activeSong == index\r\n                                    ? { color: \"#ff3b57\" }\r\n                                    : null\r\n                                }\r\n                              >\r\n                                <Grid item>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                  >\r\n                                    {e.song}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    style={{\r\n                                      fontSize: \"0.8rem\",\r\n                                      overflow: \"hidden\",\r\n                                      textOverflow: \"ellipsis\",\r\n                                      height: \"20px\",\r\n                                    }}\r\n                                  >\r\n                                    {e.infoObj.artist}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </ListItem>\r\n                          <Divider />\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n                </div>\r\n                <div>\r\n                  {object.songs.map((e, index) => {\r\n                    if (index >= 9 && index < 19) {\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            button\r\n                            onClick={() => {\r\n                              object.setSong(index);\r\n                              this.props.checkforlike(index);\r\n                              this.props.resetSong();\r\n                              object.setPlayTrue();\r\n                            }}\r\n                          >\r\n                            <Grid container spacing={2} justify=\"space-between\">\r\n                              <Grid item>\r\n                                <img src={e.img} />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs\r\n                                container\r\n                                direction=\"column\"\r\n                                style={\r\n                                  object.activeSong == index\r\n                                    ? { color: \"#ff3b57\" }\r\n                                    : null\r\n                                }\r\n                              >\r\n                                <Grid item>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                  >\r\n                                    {e.song}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    style={{\r\n                                      fontSize: \"0.8rem\",\r\n                                      overflow: \"hidden\",\r\n                                      textOverflow: \"ellipsis\",\r\n                                      height: \"20px\",\r\n                                    }}\r\n                                  >\r\n                                    {e.infoObj.artist}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </ListItem>\r\n                          <Divider />\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n                </div>\r\n                <div>\r\n                  {object.songs.map((e, index) => {\r\n                    if (index >= 19 && index < 25) {\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            button\r\n                            onClick={() => {\r\n                              object.setSong(index);\r\n                              this.props.checkforlike(index);\r\n                              this.props.resetSong();\r\n                              object.setPlayTrue();\r\n                            }}\r\n                          >\r\n                            <Grid container spacing={2} justify=\"space-between\">\r\n                              <Grid item>\r\n                                <img src={e.img} />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs\r\n                                container\r\n                                direction=\"column\"\r\n                                style={\r\n                                  object.activeSong == index\r\n                                    ? { color: \"#ff3b57\" }\r\n                                    : null\r\n                                }\r\n                              >\r\n                                <Grid item>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                  >\r\n                                    {e.song}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                  <Typography\r\n                                    style={{\r\n                                      fontSize: \"0.8rem\",\r\n                                      overflow: \"hidden\",\r\n                                      textOverflow: \"ellipsis\",\r\n                                      height: \"20px\",\r\n                                    }}\r\n                                  >\r\n                                    {e.infoObj.artist}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </ListItem>\r\n                          <Divider />\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n                </div>\r\n                <div>\r\n                  {object.songs.map((e, index) => {\r\n                    if (index >= 25 && index < object.songs.length) {\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            button\r\n                            onClick={() => {\r\n                              object.setSong(index);\r\n                              this.props.checkforlike(index);\r\n                              this.props.resetSong();\r\n                              object.setPlayTrue();\r\n                            }}\r\n                          >\r\n                            <Grid container spacing={2} justify=\"space-between\">\r\n                              <Grid item>\r\n                                <img src={e.img} />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs\r\n                                container\r\n                                direction=\"column\"\r\n                                style={\r\n                                  object.activeSong == index\r\n                                    ? { color: \"#ff3b57\" }\r\n                                    : null\r\n                                }\r\n                              >\r\n                                <Grid item>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      textTransform: \"capitalize\",\r\n                                    }}\r\n                                  >\r\n                                    {e.song}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    style={{\r\n                                      fontSize: \"0.8rem\",\r\n                                      overflow: \"hidden\",\r\n                                      textOverflow: \"ellipsis\",\r\n                                      height: \"20px\",\r\n                                    }}\r\n                                  >\r\n                                    {e.infoObj.artist}\r\n                                  </Typography>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </ListItem>\r\n                          <Divider />\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n                </div>\r\n              </SwipabeleViews>\r\n            </>\r\n          );\r\n        }}\r\n      </SongsContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Playlist;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Slider,\r\n  Button,\r\n  Fab,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Snackbar,\r\n  Drawer,\r\n  Checkbox,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ClickAwayListener,\r\n  Dialog,\r\n  DialogContent,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { SongsContext, Context } from \"./context\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport RepeatOneIcon from \"@material-ui/icons/RepeatOne\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport \"./css/home.css\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst obj = null;\r\nclass Home extends Component {\r\n  state = {\r\n    volume: 60,\r\n    snackBarMessage: \"\",\r\n    obj: null,\r\n    play: false,\r\n    songPosition: 0,\r\n    img: null,\r\n    shuffle: false,\r\n    repeatOne: false,\r\n    snackBarOpen: false,\r\n    slideOpen: false,\r\n    loading: false,\r\n\r\n    isLiked: false,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.audioref = new React.createRef();\r\n  }\r\n\r\n  //to handle the volume\r\n  handleVolume = (e, newValue) => {\r\n    this.audioref.current.volume = newValue / 100;\r\n    this.setState({ volume: newValue });\r\n  };\r\n\r\n  //to handle the play/pause of the song\r\n  playPause = () => {\r\n    if (this.state.play) {\r\n      this.audioref.current.pause();\r\n    } else {\r\n      this.audioref.current.play();\r\n    }\r\n    this.setState({ play: !this.state.play });\r\n  };\r\n\r\n  //call back when the music player slide has changed and to set the song time to the changed value\r\n  handleSongPosition = (e, newValue) => {\r\n    this.audioref.current.currentTime =\r\n      this.audioref.current.duration * (newValue / 100);\r\n    this.setState({ songPosition: newValue });\r\n  };\r\n\r\n  //change the music player  slide as song plays\r\n  changeSlide = () => {\r\n    setInterval(() => {\r\n      var x =\r\n        this.audioref.current.currentTime *\r\n        (100 / this.audioref.current.duration);\r\n      this.setState({ songPosition: x });\r\n    }, 1000);\r\n  };\r\n\r\n  //action to be taken after song ended\r\n  songEnded = () => {};\r\n\r\n  //repeat the song again\r\n  repeatSong = () => {\r\n    this.audioref.current.play();\r\n    this.setState({ play: true });\r\n  };\r\n\r\n  //play the previous song\r\n  resetSong = () => {\r\n    this.setState({ play: true });\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    setTimeout(() => {\r\n      this.audioref.current.play();\r\n    }, 1000);\r\n  };\r\n\r\n  //like and unlike song\r\n  likeUnlike = (index) => {\r\n    if (this.state.isLiked) {\r\n      localStorage.removeItem(index);\r\n    } else {\r\n      localStorage.setItem(index, index);\r\n    }\r\n  };\r\n\r\n  //set like to normal on prev and next song\r\n  checkForLike = (action, index) => {\r\n    if (action == \"prev\") {\r\n      index = index - 1;\r\n      if (index == -1) {\r\n        index = 27; //total lngth of list -1  ie last element\r\n      }\r\n    } else if (action == \"random\") {\r\n      index = index;\r\n    } else {\r\n      index = index + 1;\r\n      if (index == 10) {\r\n        //10 is the length of the list\r\n        index = 0;\r\n      }\r\n    }\r\n    var x = localStorage.getItem(index);\r\n    if (x != null) {\r\n      this.setState({ isLiked: true });\r\n    } else {\r\n      this.setState({ isLiked: false });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <SongsContext.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <>\r\n                <audio\r\n                  ref={this.audioref}\r\n                  src={require(`./music/${\r\n                    object.songs[object.activeSong].song\r\n                  }.mp3`)}\r\n                  type=\"audio/mp3\"\r\n                  onEnded={() => {\r\n                    this.setState({ songPosition: 0 });\r\n                    this.audioref.current.currentTime = 0;\r\n                    this.setState({ play: false });\r\n                    if (this.state.repeatOne) {\r\n                      this.repeatSong();\r\n                    } else if (this.state.shuffle) {\r\n                      var random = Math.floor(Math.random() * 27);\r\n                      object.setSong(random);\r\n                      this.checkForLike(\"random\", random);\r\n                      this.resetSong();\r\n                    } else {\r\n                      this.resetSong();\r\n                      object.playNext();\r\n                      this.checkForLike(\"next\", object.activeSong);\r\n                    }\r\n                  }}\r\n                  onPlaying={this.changeSlide}\r\n                ></audio>\r\n\r\n                <Paper\r\n                  className=\"music-player-paper\"\r\n                  elevation={3}\r\n                  style={{ position: \"relative\" }}\r\n                >\r\n                  <div className=\"album-title\">\r\n                    {object.songs[object.activeSong].infoObj.title}\r\n                  </div>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    align=\"left\"\r\n                    className=\"album-artist\"\r\n                  >\r\n                    {object.songs[object.activeSong].infoObj.artist}\r\n                  </Typography>\r\n                  <div className=\"album-image\">\r\n                    {this.state.loading ? (\r\n                      <Skeleton variant=\"circle\" className=\"skeleton\" />\r\n                    ) : (\r\n                      <img\r\n                        src={object.songs[object.activeSong].img}\r\n                        style={{ width: \"100%\", height: \"100%\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"music-slider\">\r\n                    <Slider\r\n                      onChange={this.handleSongPosition}\r\n                      value={this.state.songPosition}\r\n                      style={{ width: \"100%\" }}\r\n                      className=\"music-slider\"\r\n                    />\r\n                  </div>\r\n                  <Grid container justify=\"center\">\r\n                    <Grid item xs={2}>\r\n                      <Fab\r\n                        onClick={() => {\r\n                          this.resetSong();\r\n                          object.playPrev();\r\n                          this.checkForLike(\"prev\", object.activeSong);\r\n                        }}\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        size=\"small\"\r\n                      >\r\n                        <SkipPreviousIcon size=\"small\" />\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Fab\r\n                        onClick={() => {\r\n                          this.playPause();\r\n                          object.handlePlayPause();\r\n                        }}\r\n                        style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                        size=\"small\"\r\n                      >\r\n                        {this.state.play ? (\r\n                          <PauseIcon size=\"small\" />\r\n                        ) : (\r\n                          <PlayArrowIcon size=\"small\" />\r\n                        )}\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Fab\r\n                        onClick={() => {\r\n                          this.resetSong();\r\n                          object.playNext();\r\n                          this.checkForLike(\"next\", object.activeSong);\r\n                        }}\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        size=\"small\"\r\n                      >\r\n                        <SkipNextIcon size=\"small\" />\r\n                      </Fab>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className=\"bottom-nav\"\r\n                  >\r\n                    <Grid item xs>\r\n                      <Fab\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        disableRipple\r\n                      >\r\n                        <Checkbox\r\n                          icon={<RepeatIcon size=\"small\" disableRipple />}\r\n                          checkedIcon={\r\n                            <ShuffleIcon size=\"small\" disableRipple />\r\n                          }\r\n                          size=\"small\"\r\n                          checked={this.state.shuffle}\r\n                          onChange={() => {\r\n                            var x = this.state.shuffle;\r\n                            if (x) {\r\n                              this.setState({\r\n                                snackBarMessage: \"Repeat All\",\r\n                              });\r\n                            } else {\r\n                              this.setState({\r\n                                snackBarMessage: \"Shuffle on\",\r\n                              });\r\n                            }\r\n                            this.setState({\r\n                              shuffle: !x,\r\n                              snackBarOpen: true,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Fab\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        disableRipple\r\n                      >\r\n                        <Checkbox\r\n                          icon={<FavoriteBorder size=\"small\" disableRipple />}\r\n                          checkedIcon={<Favorite size=\"small\" dissbleRipple />}\r\n                          size=\"small\"\r\n                          checked={this.state.isLiked}\r\n                          onChange={() => {\r\n                            this.likeUnlike(object.activeSong);\r\n                            if (!this.state.isLiked) {\r\n                              this.setState({\r\n                                snackBarOpen: true,\r\n                                snackBarMessage: \"Added to favourites\",\r\n                              });\r\n                            }\r\n                            this.setState({ isLiked: !this.state.isLiked });\r\n                          }}\r\n                        />\r\n                      </Fab>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <ClickAwayListener\r\n                        onClickAway={() => {\r\n                          this.setState({ slideOpen: false });\r\n                        }}\r\n                      >\r\n                        <Fab\r\n                          style={{\r\n                            color: \"black\",\r\n                            backgroundColor: \"transparent\",\r\n                            boxShadow: \"none\",\r\n                          }}\r\n                          disableRipple\r\n                          onClick={() => {\r\n                            this.setState({\r\n                              slideOpen: !this.state.slideOpen,\r\n                            });\r\n                          }}\r\n                        >\r\n                          {this.state.volume == 0 ? (\r\n                            <VolumeOffIcon size=\"small\" />\r\n                          ) : (\r\n                            <VolumeUpIcon size=\"small\" />\r\n                          )}\r\n                        </Fab>\r\n                      </ClickAwayListener>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Fab\r\n                        style={{\r\n                          color: \"black\",\r\n                          backgroundColor: \"transparent\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        disableRipple\r\n                      >\r\n                        <Checkbox\r\n                          icon={<RepeatOneIcon size=\"small\" />}\r\n                          checkedIcon={\r\n                            <RepeatOneIcon\r\n                              size=\"small\"\r\n                              style={{ color: \"red\" }}\r\n                            />\r\n                          }\r\n                          size=\"small\"\r\n                          checked={this.state.repeatOne}\r\n                          onChange={() => {\r\n                            var x = this.state.repeatOne;\r\n                            if (x) {\r\n                              this.setState({\r\n                                snackBarMessage: \"Single repeat is off\",\r\n                              });\r\n                            } else {\r\n                              this.setState({\r\n                                snackBarMessage: \"Single repeat\",\r\n                              });\r\n                            }\r\n                            this.setState({\r\n                              repeatOne: !x,\r\n                              snackBarOpen: true,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </Fab>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Snackbar\r\n                    open={this.state.snackBarOpen}\r\n                    message={this.state.snackBarMessage}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"left\",\r\n                    }}\r\n                    autoHideDuration={1500}\r\n                    onClose={() => {\r\n                      this.setState({ snackBarOpen: false });\r\n                    }}\r\n                  />\r\n\r\n                  <Slide\r\n                    direction=\"up\"\r\n                    in={this.state.slideOpen}\r\n                    style={{ position: \"absolute\", bottom: 0, left: 0 }}\r\n                    timeout={{\r\n                      enter: 600,\r\n                      exit: 1000,\r\n                    }}\r\n                  >\r\n                    <Paper\r\n                      className=\"volume-slider-paper\"\r\n                      style={{ background: \"whiteSmoke\" }}\r\n                    >\r\n                      <div className=\"volume-slider\">\r\n                        <div>\r\n                          {this.state.volume == 0 ? (\r\n                            <VolumeOffIcon size=\"small\" />\r\n                          ) : (\r\n                            <VolumeDownIcon size=\"small\" />\r\n                          )}\r\n                        </div>\r\n                        <Slider\r\n                          style={{ width: \"60%\" }}\r\n                          onChange={this.handleVolume}\r\n                          defaultValue={60}\r\n                          onMouseUp={() => {\r\n                            this.setState({ slideOpen: false });\r\n                          }}\r\n                        />\r\n                        <div>\r\n                          <VolumeUpIcon size=\"small\" />\r\n                        </div>\r\n                      </div>\r\n                    </Paper>\r\n                  </Slide>\r\n                </Paper>\r\n              </>\r\n            );\r\n          }}\r\n        </SongsContext.Consumer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { SongsContext } from \"./context\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nclass Favourite extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <SongsContext.Consumer>\r\n        {(object) => {\r\n          return (\r\n            <List>\r\n              {object.songs.map((e, index) => {\r\n                var x = localStorage.getItem(index);\r\n                if (x != null) {\r\n                  return (\r\n                    <>\r\n                      <ListItem\r\n                        button\r\n                        onClick={() => {\r\n                          object.setSong(index);\r\n                          this.props.checkforlike(index);\r\n                          this.props.resetSong();\r\n                          object.setPlayTrue();\r\n                        }}\r\n                      >\r\n                        <Grid container spacing={2} justify=\"space-between\">\r\n                          <Grid item>\r\n                            <img src={e.img} />\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs\r\n                            container\r\n                            direction=\"column\"\r\n                            style={\r\n                              object.activeSong == index\r\n                                ? { color: \"#ff3b57\" }\r\n                                : null\r\n                            }\r\n                          >\r\n                            <Grid item>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  textTransform: \"capitalize\",\r\n                                }}\r\n                              >\r\n                                {e.song}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                              <Typography\r\n                                variant=\"subtitle2\"\r\n                                style={{ overflowX: \"hidden\" }}\r\n                              >\r\n                                {e.infoObj.artist}\r\n                              </Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </>\r\n                  );\r\n                }\r\n              })}\r\n            </List>\r\n          );\r\n        }}\r\n      </SongsContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favourite;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport { Context, SongsContext } from \"./context\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  ListItem,\r\n  Paper,\r\n  Drawer,\r\n  Slide,\r\n  Backdrop,\r\n  IconButton,\r\n  ClickAwayListener,\r\n  Divider,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  List,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport Playlist from \"./playlist\";\r\nimport \"./css/wrapper.css\";\r\nimport Home from \"./home\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport Favourite from \"./favourites\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\n\r\nclass Wrapper extends Component {\r\n  state = {\r\n    tab: 0,\r\n    loading: true,\r\n    DrawerOpen: false,\r\n    currentSongOpen: false,\r\n    DialogOpen: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.HomeRef = new React.createRef();\r\n  }\r\n\r\n  handleCurrentSongSlide = () => {\r\n    this.setState({ currentSongOpen: !this.state.currentSongOpen });\r\n  };\r\n\r\n  //handle the info  dialog\r\n  handleDialog = () => {\r\n    this.setState({ DialogOpen: !this.state.DialogOpen });\r\n  };\r\n  render() {\r\n    return (\r\n      <Context>\r\n        <SongsContext.Consumer>\r\n          {(object) => {\r\n            return (\r\n              <Router basename={window.location.pathname || \"\"}>\r\n                <Paper className=\"wrapper-paper\" elevation={2}>\r\n                  <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className=\"title-grid\"\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      <ClickAwayListener\r\n                        onClickAway={() => {\r\n                          this.setState({ DrawerOpen: false });\r\n                        }}\r\n                      >\r\n                        {this.state.currentSongOpen ? (\r\n                          <KeyboardArrowDownIcon\r\n                            size=\"small\"\r\n                            onClick={this.handleCurrentSongSlide}\r\n                            style={{ color: \"white\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <MenuIcon\r\n                            size=\"small\"\r\n                            style={{ color: \"white\", cursor: \"pointer\" }}\r\n                            onClick={() => {\r\n                              this.setState({ DrawerOpen: true });\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </ClickAwayListener>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <Typography align=\"center\" variant=\"h6\" className=\"title\">\r\n                        {this.state.currentSongOpen ? \"Now Playing\" : \"Music\"}{\" \"}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      {this.state.currentSongOpen && (\r\n                        <Button onClick={this.handleDialog} disableRipple>\r\n                          <InfoIcon size=\"small\" style={{ color: \"white\" }} />\r\n                        </Button>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Route path=\"/\" exact>\r\n                    <div className=\"play-list\">\r\n                      <Playlist\r\n                        checkforlike={(index) => {\r\n                          this.HomeRef.current.checkForLike(\"random\", index);\r\n                        }}\r\n                        resetSong={() => {\r\n                          this.HomeRef.current.resetSong();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Route>\r\n                  <Route path=\"/fav\" exact>\r\n                    <div className=\"play-list\">\r\n                      <Favourite\r\n                        checkforlike={(index) => {\r\n                          this.HomeRef.current.checkForLike(\"random\", index);\r\n                        }}\r\n                        resetSong={() => {\r\n                          this.HomeRef.current.resetSong();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Route>\r\n                  <Paper className=\"music-player-bottom\" elevation={4}>\r\n                    <ListItem button onClick={this.handleCurrentSongSlide}>\r\n                      <Grid container spacing={2} justify=\"space-between\">\r\n                        <Grid item>\r\n                          <img src={object.songs[object.activeSong].img} />\r\n                        </Grid>\r\n                        <Grid item xs container direction=\"column\">\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              style={{\r\n                                fontWeight: \"bold\",\r\n                                textTransform: \"capitalize\",\r\n                              }}\r\n                            >\r\n                              {object.songs[object.activeSong].song}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              style={{\r\n                                overflowX: \"hidden\",\r\n\r\n                                height: \"20px\",\r\n                                textOverflow: \"ellipsis\",\r\n                              }}\r\n                            >\r\n                              {object.songs[object.activeSong].infoObj.artist}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item style={{ paddingRight: \"10px\" }}>\r\n                          <div className={object.isPlay ? \"anim-div\" : null}>\r\n                            <div className=\"one\"></div>\r\n                            <div className=\"two\"></div>\r\n                            <div className=\"three\"></div>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </ListItem>\r\n                  </Paper>\r\n                  <Slide\r\n                    direction=\"right\"\r\n                    in={this.state.DrawerOpen}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"150px\",\r\n                      height: \"100%\",\r\n                    }}\r\n                    timeout={{\r\n                      enter: 600,\r\n                      exit: 1000,\r\n                    }}\r\n                  >\r\n                    <div style={{ width: \"200px\" }} className=\"slide\">\r\n                      <Typography\r\n                        gutterBottom\r\n                        align=\"right\"\r\n                        style={{ paddingRight: \"10px\" }}\r\n                      >\r\n                        <KeyboardArrowLeftIcon\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={() => {\r\n                            this.setState({ DrawerOpen: false });\r\n                          }}\r\n                        />\r\n                      </Typography>\r\n                      <List>\r\n                        <ListItem button component={Link} to=\"/\">\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\" align=\"left\">\r\n                              <MusicNoteIcon size=\"small\" /> All songs\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        <ListItem button component={Link} to=\"/fav\">\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\" align=\"left\">\r\n                              <FavoriteIcon size=\"small\" /> Favourites\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                      </List>\r\n                    </div>\r\n                  </Slide>\r\n\r\n                  <Slide\r\n                    in={this.state.currentSongOpen}\r\n                    direction=\"up\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      bottom: 0,\r\n                      left: 0,\r\n                      width: \"100%\",\r\n                      height: \"91.5%\",\r\n                      zIndex: 100000,\r\n                    }}\r\n                    timeout={{\r\n                      enter: 600,\r\n                      exit: 400,\r\n                    }}\r\n                  >\r\n                    <Paper>\r\n                      <Home ref={this.HomeRef} />\r\n                    </Paper>\r\n                  </Slide>\r\n                  <Dialog\r\n                    open={this.state.DialogOpen}\r\n                    onClose={this.handleDialog}\r\n                    style={{ zIndex: \"10000000\" }}\r\n                  >\r\n                    <DialogContent style={{ padding: 0 }}>\r\n                      <List>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Title :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.title}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Album :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.album}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Genre :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.genre}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Artist :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.artist}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Year released :{\" \"}\r\n                              {object.songs[object.activeSong].infoObj.year}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                      </List>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Paper>\r\n              </Router>\r\n            );\r\n          }}\r\n        </SongsContext.Consumer>\r\n      </Context>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Wrapper from \"./musicplayer/wrapper\";\r\nimport Home from \"./musicplayer/home\";\r\n\r\nReactDOM.render(<Wrapper />, document.getElementById(\"root\"));\r\n","var map = {\n\t\"./Bomdiggy.mp3\": 104,\n\t\"./Butta Bomma.mp3\": 105,\n\t\"./Emo Emo.mp3\": 106,\n\t\"./Endhuko Emo.mp3\": 107,\n\t\"./Faded.mp3\": 108,\n\t\"./Haan Main Galat.mp3\": 109,\n\t\"./Hawayein.mp3\": 110,\n\t\"./Ik Variaa.mp3\": 111,\n\t\"./Illegal Weapon.mp3\": 112,\n\t\"./Inka Edho.mp3\": 113,\n\t\"./Kudukku song.mp3\": 114,\n\t\"./Kutti story.mp3\": 115,\n\t\"./Maatevinadhuga.mp3\": 116,\n\t\"./Malang.mp3\": 117,\n\t\"./Manasu Maree.mp3\": 118,\n\t\"./O saki saki.mp3\": 119,\n\t\"./Pachtaoge.mp3\": 120,\n\t\"./Ramulo Ramula.mp3\": 121,\n\t\"./Rowdybaby.mp3\": 122,\n\t\"./Samajavaragamana.mp3\": 123,\n\t\"./Singles Anthem.mp3\": 124,\n\t\"./Solo.mp3\": 125,\n\t\"./Sorry.mp3\": 126,\n\t\"./Starboy.mp3\": 127,\n\t\"./Taki Taki.mp3\": 128,\n\t\"./Thodi jagah.mp3\": 129,\n\t\"./Thunder.mp3\": 130,\n\t\"./Yaanji.mp3\": 131,\n\t\"./sanamre.mp3\": 132\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 68;"],"sourceRoot":""}