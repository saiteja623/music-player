{"version":3,"sources":["musicplayer/context.jsx","musicplayer/home.jsx","index.js","musicplayer/music sync /^/.*/.mp3$","musicplayer/music/bharat.mp3","musicplayer/music/bomdiggy.mp3","musicplayer/music/galat.mp3","musicplayer/music/highrated.mp3","musicplayer/music/inkaedo.mp3","musicplayer/music/pachtaoge.mp3","musicplayer/music/preminche.mp3","musicplayer/music/sanamre.mp3","musicplayer/music/sochnasake.mp3","musicplayer/music/sorry.mp3","musicplayer/music/yaanji.mp3"],"names":["SongsContext","createContext","Context","state","list","songs","img","infoObj","title","artist","album","genre","year","song","i","componentDidMount","setDetails","require","read","onSuccess","e","image","tags","picture","str","j","data","length","String","fromCharCode","o","format","window","btoa","console","log","push","setState","Provider","value","this","props","children","Component","Home","volume","snackBarMessage","obj","play","songPosition","shuffle","repeatOne","snackBarOpen","slideOpen","activeSong","loading","DialogOpen","isLiked","audioref","current","handleVolume","newValue","playPause","pause","handleSongPosition","currentTime","duration","changeSlide","setInterval","x","songEnded","repeatSong","random","Math","floor","playNextSong","setTimeout","playPrevSong","handleDialog","React","createRef","Consumer","object","ref","src","type","onEnded","onPlaying","Paper","className","elevation","style","position","Typography","variant","align","fontWeight","Skeleton","width","height","Slider","onChange","Grid","container","justify","item","xs","Fab","onClick","color","backgroundColor","boxShadow","size","alignItems","disableRipple","Checkbox","icon","checkedIcon","checked","dissbleRipple","ClickAwayListener","onClickAway","Snackbar","open","message","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Slide","direction","in","bottom","left","timeout","enter","exit","background","defaultValue","onMouseUp","Button","Dialog","DialogContent","padding","List","ListItem","ListItemText","ReactDOM","render","document","getElementById","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.03c41ffe.chunk.js","sourcesContent":["import React, { Component, createContext } from \"react\";\r\n\r\nexport const SongsContext = createContext();\r\n\r\nexport class Context extends Component {\r\n  state = {\r\n    list: [\r\n      \"inkaedo\",\r\n      \"sanamre\",\r\n      \"sorry\",\r\n      \"galat\",\r\n      \"preminche\",\r\n      \"highrated\",\r\n      \"yaanji\",\r\n      \"bharat\",\r\n      \"bomdiggy\",\r\n      \"pachtaoge\",\r\n    ],\r\n    songs: [\r\n      {\r\n        img: null,\r\n        infoObj: {\r\n          title: \"\",\r\n          artist: \"\",\r\n          album: \"\",\r\n          genre: \"\",\r\n          year: 2020,\r\n        },\r\n        song: \"inkaedo\",\r\n      },\r\n    ],\r\n    i: 0,\r\n  };\r\n  componentDidMount = () => {\r\n    this.setDetails();\r\n  };\r\n  setDetails = () => {\r\n    var jsmediatags = require(\"jsmediatags\");\r\n    jsmediatags.read(\r\n      `http://localhost:3000${require(`./music/${\r\n        this.state.list[this.state.i]\r\n      }.mp3`)}`,\r\n      {\r\n        onSuccess: (e) => {\r\n          var image = e.tags.picture;\r\n          var str = \"\";\r\n          for (var j = 0; j < image.data.length; j++) {\r\n            str += String.fromCharCode(image.data[j]);\r\n          }\r\n          var base64 = \"data:\" + image.format + \";base64,\" + window.btoa(str);\r\n          var o = {\r\n            img: base64,\r\n            infoObj: e.tags,\r\n            song: this.state.list[this.state.i],\r\n          };\r\n          console.log(o);\r\n          if (this.state.i == 0) {\r\n            var songs = [];\r\n            songs.push(o);\r\n            this.setState({ songs });\r\n          } else {\r\n            var songs = this.state.songs;\r\n            songs.push(o);\r\n            this.setState({ songs });\r\n          }\r\n          this.setState({ i: this.state.i + 1 });\r\n          if (this.state.i !== 10) {\r\n            this.setDetails();\r\n          }\r\n        },\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <SongsContext.Provider\r\n        value={{\r\n          songs: this.state.songs,\r\n          list: this.state.list,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </SongsContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Slider,\r\n  Button,\r\n  Fab,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Snackbar,\r\n  Drawer,\r\n  Checkbox,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ClickAwayListener,\r\n  Dialog,\r\n  DialogContent,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { SongsContext, Context } from \"./context\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport RepeatOneIcon from \"@material-ui/icons/RepeatOne\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport \"./css/home.css\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst obj = null;\r\nclass Home extends Component {\r\n  state = {\r\n    volume: 60,\r\n    snackBarMessage: \"\",\r\n    obj: null,\r\n    play: false,\r\n    songPosition: 0,\r\n    img: null,\r\n    shuffle: false,\r\n    repeatOne: false,\r\n    snackBarOpen: false,\r\n    slideOpen: false,\r\n    activeSong: 0,\r\n    loading: false,\r\n    DialogOpen: false,\r\n    isLiked: false,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.audioref = new React.createRef();\r\n  }\r\n  componentDidMount = () => {\r\n    this.audioref.current.play();\r\n    this.setState({ play: true });\r\n  };\r\n\r\n  //to handle the volume\r\n  handleVolume = (e, newValue) => {\r\n    this.audioref.current.volume = newValue / 100;\r\n    this.setState({ volume: newValue });\r\n  };\r\n\r\n  //to handle the play/pause of the song\r\n  playPause = () => {\r\n    if (this.state.play) {\r\n      this.audioref.current.pause();\r\n    } else {\r\n      this.audioref.current.play();\r\n    }\r\n    this.setState({ play: !this.state.play });\r\n  };\r\n\r\n  //call back when the music player slide has changed and to set the song time to the changed value\r\n  handleSongPosition = (e, newValue) => {\r\n    this.audioref.current.currentTime =\r\n      this.audioref.current.duration * (newValue / 100);\r\n    this.setState({ songPosition: newValue });\r\n  };\r\n\r\n  //change the music player  slide as song plays\r\n  changeSlide = () => {\r\n    setInterval(() => {\r\n      var x =\r\n        this.audioref.current.currentTime *\r\n        (100 / this.audioref.current.duration);\r\n      this.setState({ songPosition: x });\r\n    }, 1000);\r\n  };\r\n\r\n  //action to be taken after song ended\r\n  songEnded = () => {\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    this.setState({ play: false });\r\n    if (this.state.repeatOne) {\r\n      this.repeatSong();\r\n    } else if (this.state.shuffle) {\r\n      var random = Math.floor(Math.random() * 10);\r\n      this.setState({ activeSong: random, play: true });\r\n    } else {\r\n      this.playNextSong();\r\n    }\r\n  };\r\n\r\n  //repeat the song again\r\n  repeatSong = () => {\r\n    this.audioref.current.play();\r\n    this.setState({ play: true });\r\n  };\r\n  //play next song\r\n  playNextSong = () => {\r\n    var activeSong = this.state.activeSong;\r\n    if (this.state.activeSong === 9) {\r\n      activeSong = 0;\r\n    } else {\r\n      activeSong = activeSong + 1;\r\n    }\r\n    this.setState({ activeSong, play: true });\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    setTimeout(() => {\r\n      this.audioref.current.play();\r\n    }, 1000);\r\n  };\r\n\r\n  //play the previous song\r\n  playPrevSong = () => {\r\n    var activeSong = this.state.activeSong;\r\n    if (this.state.activeSong === 0) {\r\n      activeSong = 9;\r\n    } else {\r\n      activeSong = activeSong - 1;\r\n    }\r\n    this.setState({ activeSong, play: true });\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    setTimeout(() => {\r\n      this.audioref.current.play();\r\n    }, 1000);\r\n  };\r\n\r\n  //handle the info  dialog\r\n  handleDialog = () => {\r\n    this.setState({ DialogOpen: !this.state.DialogOpen });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Context>\r\n          <SongsContext.Consumer>\r\n            {(object) => {\r\n              return (\r\n                <>\r\n                  <audio\r\n                    ref={this.audioref}\r\n                    src={require(`./music/${\r\n                      object.songs[this.state.activeSong].song\r\n                    }.mp3`)}\r\n                    type=\"audio/mp3\"\r\n                    onEnded={this.songEnded}\r\n                    onPlaying={this.changeSlide}\r\n                  ></audio>\r\n\r\n                  <Paper\r\n                    className=\"music-player-paper\"\r\n                    elevation={3}\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      align=\"center\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                      className=\"album-title\"\r\n                    >\r\n                      {object.songs[this.state.activeSong].infoObj.title}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"caption\"\r\n                      align=\"left\"\r\n                      className=\"album-artist\"\r\n                    >\r\n                      {object.songs[this.state.activeSong].infoObj.artist}\r\n                    </Typography>\r\n                    <div className=\"album-image\">\r\n                      {this.state.loading ? (\r\n                        <Skeleton variant=\"circle\" className=\"skeleton\" />\r\n                      ) : (\r\n                        <img\r\n                          src={object.songs[this.state.activeSong].img}\r\n                          style={{ width: \"100%\", height: \"100%\" }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"music-slider\">\r\n                      <Slider\r\n                        onChange={this.handleSongPosition}\r\n                        value={this.state.songPosition}\r\n                        style={{ width: \"100%\" }}\r\n                        className=\"music-slider\"\r\n                      />\r\n                    </div>\r\n                    <Grid container justify=\"center\">\r\n                      <Grid item xs={2}>\r\n                        <Fab\r\n                          onClick={() => {\r\n                            this.playPrevSong();\r\n                          }}\r\n                          style={{\r\n                            color: \"black\",\r\n                            backgroundColor: \"transparent\",\r\n                            boxShadow: \"none\",\r\n                          }}\r\n                          size=\"small\"\r\n                        >\r\n                          <SkipPreviousIcon size=\"small\" />\r\n                        </Fab>\r\n                      </Grid>\r\n                      <Grid item xs={2}>\r\n                        <Fab\r\n                          onClick={() => {\r\n                            this.playPause();\r\n                          }}\r\n                          style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                          size=\"small\"\r\n                        >\r\n                          {this.state.play ? (\r\n                            <PauseIcon size=\"small\" />\r\n                          ) : (\r\n                            <PlayArrowIcon size=\"small\" />\r\n                          )}\r\n                        </Fab>\r\n                      </Grid>\r\n                      <Grid item xs={2}>\r\n                        <Fab\r\n                          onClick={() => {\r\n                            this.playNextSong();\r\n                          }}\r\n                          style={{\r\n                            color: \"black\",\r\n                            backgroundColor: \"transparent\",\r\n                            boxShadow: \"none\",\r\n                          }}\r\n                          size=\"small\"\r\n                        >\r\n                          <SkipNextIcon size=\"small\" />\r\n                        </Fab>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      className=\"bottom-nav\"\r\n                    >\r\n                      <Grid item xs>\r\n                        <Fab\r\n                          style={{\r\n                            color: \"black\",\r\n                            backgroundColor: \"transparent\",\r\n                            boxShadow: \"none\",\r\n                          }}\r\n                          disableRipple\r\n                        >\r\n                          <Checkbox\r\n                            icon={<RepeatIcon size=\"small\" disableRipple />}\r\n                            checkedIcon={\r\n                              <ShuffleIcon size=\"small\" disableRipple />\r\n                            }\r\n                            size=\"small\"\r\n                            checked={this.state.shuffle}\r\n                            onChange={() => {\r\n                              var x = this.state.shuffle;\r\n                              if (x) {\r\n                                this.setState({\r\n                                  snackBarMessage: \"Repeat All\",\r\n                                });\r\n                              } else {\r\n                                this.setState({\r\n                                  snackBarMessage: \"Shuffle on\",\r\n                                });\r\n                              }\r\n                              this.setState({\r\n                                shuffle: !x,\r\n                                snackBarOpen: true,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </Fab>\r\n                      </Grid>\r\n                      <Grid item xs>\r\n                        <Fab\r\n                          style={{\r\n                            color: \"black\",\r\n                            backgroundColor: \"transparent\",\r\n                            boxShadow: \"none\",\r\n                          }}\r\n                          disableRipple\r\n                        >\r\n                          <Checkbox\r\n                            icon={<FavoriteBorder size=\"small\" disableRipple />}\r\n                            checkedIcon={\r\n                              <Favorite size=\"small\" dissbleRipple />\r\n                            }\r\n                            size=\"small\"\r\n                            checked={this.state.isLiked}\r\n                            onChange={() => {\r\n                              if (!this.state.isLiked) {\r\n                                this.setState({\r\n                                  snackBarOpen: true,\r\n                                  snackBarMessage: \"Added to favourites\",\r\n                                });\r\n                              }\r\n                              this.setState({ isLiked: !this.state.isLiked });\r\n                            }}\r\n                          />\r\n                        </Fab>\r\n                      </Grid>\r\n                      <Grid item xs>\r\n                        <ClickAwayListener\r\n                          onClickAway={() => {\r\n                            this.setState({ slideOpen: false });\r\n                          }}\r\n                        >\r\n                          <Fab\r\n                            style={{\r\n                              color: \"black\",\r\n                              backgroundColor: \"transparent\",\r\n                              boxShadow: \"none\",\r\n                            }}\r\n                            disableRipple\r\n                            onClick={() => {\r\n                              this.setState({\r\n                                slideOpen: !this.state.slideOpen,\r\n                              });\r\n                            }}\r\n                          >\r\n                            {this.state.volume == 0 ? (\r\n                              <VolumeOffIcon size=\"small\" />\r\n                            ) : (\r\n                              <VolumeUpIcon size=\"small\" />\r\n                            )}\r\n                          </Fab>\r\n                        </ClickAwayListener>\r\n                      </Grid>\r\n                      <Grid item xs>\r\n                        <Fab\r\n                          style={{\r\n                            color: \"black\",\r\n                            backgroundColor: \"transparent\",\r\n                            boxShadow: \"none\",\r\n                          }}\r\n                          disableRipple\r\n                        >\r\n                          <Checkbox\r\n                            icon={<RepeatOneIcon size=\"small\" />}\r\n                            checkedIcon={\r\n                              <RepeatOneIcon\r\n                                size=\"small\"\r\n                                style={{ color: \"red\" }}\r\n                              />\r\n                            }\r\n                            size=\"small\"\r\n                            checked={this.state.repeatOne}\r\n                            onChange={() => {\r\n                              var x = this.state.repeatOne;\r\n                              if (x) {\r\n                                this.setState({\r\n                                  snackBarMessage: \"Single repeat is off\",\r\n                                });\r\n                              } else {\r\n                                this.setState({\r\n                                  snackBarMessage: \"Single repeat\",\r\n                                });\r\n                              }\r\n                              this.setState({\r\n                                repeatOne: !x,\r\n                                snackBarOpen: true,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </Fab>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Snackbar\r\n                      open={this.state.snackBarOpen}\r\n                      message={this.state.snackBarMessage}\r\n                      anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\",\r\n                      }}\r\n                      autoHideDuration={1500}\r\n                      onClose={() => {\r\n                        this.setState({ snackBarOpen: false });\r\n                      }}\r\n                    />\r\n\r\n                    <Slide\r\n                      direction=\"up\"\r\n                      in={this.state.slideOpen}\r\n                      style={{ position: \"absolute\", bottom: 0, left: 0 }}\r\n                      timeout={{\r\n                        enter: 600,\r\n                        exit: 1000,\r\n                      }}\r\n                    >\r\n                      <Paper\r\n                        className=\"volume-slider-paper\"\r\n                        style={{ background: \"whiteSmoke\" }}\r\n                      >\r\n                        <div className=\"volume-slider\">\r\n                          <div>\r\n                            {this.state.volume == 0 ? (\r\n                              <VolumeOffIcon size=\"small\" />\r\n                            ) : (\r\n                              <VolumeDownIcon size=\"small\" />\r\n                            )}\r\n                          </div>\r\n                          <Slider\r\n                            style={{ width: \"60%\" }}\r\n                            onChange={this.handleVolume}\r\n                            defaultValue={60}\r\n                            onMouseUp={() => {\r\n                              this.setState({ slideOpen: false });\r\n                            }}\r\n                          />\r\n                          <div>\r\n                            <VolumeUpIcon size=\"small\" />\r\n                          </div>\r\n                        </div>\r\n                      </Paper>\r\n                    </Slide>\r\n                  </Paper>\r\n\r\n                  <Button onClick={this.handleDialog} color=\"primary\">\r\n                    Info\r\n                  </Button>\r\n                  <Dialog\r\n                    open={this.state.DialogOpen}\r\n                    onClose={this.handleDialog}\r\n                  >\r\n                    <DialogContent style={{ padding: 0 }}>\r\n                      <List>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Title :{\" \"}\r\n                              {\r\n                                object.songs[this.state.activeSong].infoObj\r\n                                  .title\r\n                              }\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Album :{\" \"}\r\n                              {\r\n                                object.songs[this.state.activeSong].infoObj\r\n                                  .album\r\n                              }\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Genre :{\" \"}\r\n                              {\r\n                                object.songs[this.state.activeSong].infoObj\r\n                                  .genre\r\n                              }\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Artist :{\" \"}\r\n                              {\r\n                                object.songs[this.state.activeSong].infoObj\r\n                                  .artist\r\n                              }\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                          <ListItemText>\r\n                            <Typography variant=\"body1\">\r\n                              Year released :{\" \"}\r\n                              {object.songs[this.state.activeSong].infoObj.year}\r\n                            </Typography>\r\n                          </ListItemText>\r\n                        </ListItem>\r\n                      </List>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </>\r\n              );\r\n            }}\r\n          </SongsContext.Consumer>\r\n        </Context>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Home from \"./musicplayer/home\";\r\n\r\nReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n","var map = {\n\t\"./bharat.mp3\": 81,\n\t\"./bomdiggy.mp3\": 82,\n\t\"./galat.mp3\": 83,\n\t\"./highrated.mp3\": 84,\n\t\"./inkaedo.mp3\": 85,\n\t\"./pachtaoge.mp3\": 86,\n\t\"./preminche.mp3\": 87,\n\t\"./sanamre.mp3\": 88,\n\t\"./sochnasake.mp3\": 89,\n\t\"./sorry.mp3\": 90,\n\t\"./yaanji.mp3\": 91\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","module.exports = __webpack_public_path__ + \"static/media/bharat.19514d6d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bomdiggy.978a7ec7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/galat.7e7998cd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/highrated.ee330ef9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/inkaedo.bddd0ee3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pachtaoge.86457d66.mp3\";","module.exports = __webpack_public_path__ + \"static/media/preminche.26b929d3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sanamre.d8e9d52f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sochnasake.ea7c6652.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sorry.b2a403fa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yaanji.74f7d684.mp3\";"],"sourceRoot":""}