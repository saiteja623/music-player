{"version":3,"sources":["musicplayer/home.jsx","index.js","musicplayer/music sync /^/.*/.mp3$","musicplayer/music/bharat.mp3","musicplayer/music/bomdiggy.mp3","musicplayer/music/galat.mp3","musicplayer/music/highrated.mp3","musicplayer/music/inkaedo.mp3","musicplayer/music/pachtaoge.mp3","musicplayer/music/preminche.mp3","musicplayer/music/sanamre.mp3","musicplayer/music/sochnasake.mp3","musicplayer/music/sorry.mp3","musicplayer/music/yaanji.mp3"],"names":["Home","props","state","volume","obj","play","songPosition","img","infoObj","album","genre","artist","year","shuffle","repeatOne","snackBarOpen","slideOpen","list","activeSong","loading","DialogOpen","componentDidMount","setSongDetails","require","read","onSuccess","e","image","tags","picture","str","i","data","length","String","fromCharCode","base64","format","window","btoa","setState","audioref","current","handleVolume","newValue","playPause","pause","handleSongPosition","currentTime","duration","changeSlide","setInterval","x","songEnded","repeatSong","random","Math","floor","playNextSong","playPrevSong","handleDialog","React","createRef","xref","ref","this","src","type","onEnded","onPlaying","Paper","className","elevation","style","position","Typography","variant","align","fontWeight","title","Skeleton","width","height","Slider","onChange","value","Grid","container","justify","item","xs","Fab","onClick","color","backgroundColor","boxShadow","size","alignItems","disableRipple","Checkbox","icon","checkedIcon","checked","snackBarMessage","dissbleRipple","ClickAwayListener","onClickAway","Snackbar","open","message","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Slide","direction","in","bottom","left","timeout","enter","exit","background","defaultValue","onMouseUp","Button","Dialog","DialogContent","padding","List","ListItem","ListItemText","Component","ReactDOM","render","document","getElementById","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.d6a2b48c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Slider,\r\n  Button,\r\n  Fab,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Snackbar,\r\n  Drawer,\r\n  Checkbox,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ClickAwayListener,\r\n  Dialog,\r\n  DialogContent,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport RepeatOneIcon from \"@material-ui/icons/RepeatOne\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport \"./css/home.css\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst obj = null;\r\nclass Home extends Component {\r\n  state = {\r\n    volume: 60,\r\n    obj: null,\r\n    play: false,\r\n    songPosition: 0,\r\n    img: null,\r\n    infoObj: {\r\n      album: \"\",\r\n      genre: \"\",\r\n      artist: \"\",\r\n      year: null,\r\n    },\r\n    shuffle: false,\r\n    repeatOne: false,\r\n    snackBarOpen: false,\r\n    slideOpen: false,\r\n    list: [\r\n      \"inkaedo\",\r\n      \"sanamre\",\r\n      \"sorry\",\r\n      \"galat\",\r\n      \"preminche\",\r\n      \"highrated\",\r\n      \"yaanji\",\r\n      \"bharat\",\r\n      \"bomdiggy\",\r\n      \"pachtaoge\",\r\n    ],\r\n    activeSong: 0,\r\n    loading: true,\r\n    DialogOpen: false,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.audioref = new React.createRef();\r\n    this.xref = new React.createRef();\r\n  }\r\n  componentDidMount = () => {\r\n    this.setSongDetails(0);\r\n  };\r\n\r\n  //set the cover image and obj\r\n  setSongDetails = (activeSong) => {\r\n    var jsmediatags = require(\"jsmediatags\");\r\n    jsmediatags.read(\r\n      `https://saiteja623.github.io/music-player${require(`./music/${this.state.list[activeSong]}.mp3`)}`,\r\n      {\r\n        onSuccess: (e) => {\r\n          var image = e.tags.picture;\r\n          var str = \"\";\r\n          for (var i = 0; i < image.data.length; i++) {\r\n            str += String.fromCharCode(image.data[i]);\r\n          }\r\n          var base64 = \"data:\" + image.format + \";base64,\" + window.btoa(str);\r\n          this.setState({\r\n            img: base64,\r\n            infoObj: e.tags,\r\n            play: true,\r\n            loading: false,\r\n          });\r\n          this.audioref.current.play();\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  //to handle the volume\r\n  handleVolume = (e, newValue) => {\r\n    this.audioref.current.volume = newValue / 100;\r\n    this.setState({ volume: newValue });\r\n  };\r\n\r\n  //to handle the play/pause of the song\r\n  playPause = () => {\r\n    if (this.state.play) {\r\n      this.audioref.current.pause();\r\n    } else {\r\n      this.audioref.current.play();\r\n    }\r\n    this.setState({ play: !this.state.play });\r\n  };\r\n\r\n  //call back when the music player slide has changed and to set the song time to the changed value\r\n  handleSongPosition = (e, newValue) => {\r\n    this.audioref.current.currentTime =\r\n      this.audioref.current.duration * (newValue / 100);\r\n    this.setState({ songPosition: newValue });\r\n  };\r\n\r\n  //change the music player  slide as song plays\r\n  changeSlide = () => {\r\n    setInterval(() => {\r\n      var x =\r\n        this.audioref.current.currentTime *\r\n        (100 / this.audioref.current.duration);\r\n      this.setState({ songPosition: x });\r\n    }, 1000);\r\n  };\r\n\r\n  //action to be taken after song ended\r\n  songEnded = () => {\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    this.setState({ play: false });\r\n    if (this.state.repeatOne) {\r\n      this.repeatSong();\r\n    } else if (this.state.shuffle) {\r\n      var random = Math.floor(Math.random() * this.state.list.length);\r\n      this.setState({ activeSong: random, play: true });\r\n      this.setSongDetails(random);\r\n    } else {\r\n      this.playNextSong();\r\n    }\r\n  };\r\n\r\n  //repeat the song again\r\n  repeatSong = () => {\r\n    this.audioref.current.play();\r\n    this.setState({ play: true });\r\n  };\r\n  //play next song\r\n  playNextSong = () => {\r\n    var activeSong = this.state.activeSong;\r\n    if (this.state.activeSong === this.state.list.length - 1) {\r\n      activeSong = 0;\r\n    } else {\r\n      activeSong = activeSong + 1;\r\n    }\r\n    this.setState({ activeSong, loading: true });\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    this.setSongDetails(activeSong);\r\n  };\r\n\r\n  //play the previous song\r\n  playPrevSong = () => {\r\n    var activeSong = this.state.activeSong;\r\n    if (this.state.activeSong === 0) {\r\n      activeSong = this.state.list.length - 1;\r\n    } else {\r\n      activeSong = activeSong - 1;\r\n    }\r\n    this.setState({ activeSong, loading: true });\r\n    this.setState({ songPosition: 0 });\r\n    this.audioref.current.currentTime = 0;\r\n    this.setSongDetails(activeSong);\r\n  };\r\n\r\n  //handle the info  dialog\r\n  handleDialog = () => {\r\n    this.setState({ DialogOpen: !this.state.DialogOpen });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <audio\r\n          ref={this.audioref}\r\n          src={require(`./music/${this.state.list[this.state.activeSong]}.mp3`)}\r\n          type=\"audio/mp3\"\r\n          onEnded={this.songEnded}\r\n          onPlaying={this.changeSlide}\r\n        ></audio>\r\n\r\n        <Paper\r\n          className=\"music-player-paper\"\r\n          elevation={3}\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <Typography\r\n            variant=\"body1\"\r\n            align=\"center\"\r\n            style={{ fontWeight: \"bold\" }}\r\n            className=\"album-title\"\r\n          >\r\n            {this.state.infoObj.title}\r\n          </Typography>\r\n          <Typography variant=\"caption\" align=\"left\" className=\"album-artist\">\r\n            {this.state.infoObj.artist}\r\n          </Typography>\r\n          <div className=\"album-image\">\r\n            {this.state.loading ? (\r\n              <Skeleton variant=\"circle\" className=\"skeleton\" />\r\n            ) : (\r\n              <img\r\n                src={this.state.img}\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"music-slider\">\r\n            <Slider\r\n              onChange={this.handleSongPosition}\r\n              value={this.state.songPosition}\r\n              style={{ width: \"100%\" }}\r\n              className=\"music-slider\"\r\n            />\r\n          </div>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={2}>\r\n              <Fab\r\n                onClick={() => {\r\n                  this.playPrevSong();\r\n                }}\r\n                style={{\r\n                  color: \"black\",\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n                size=\"small\"\r\n              >\r\n                <SkipPreviousIcon size=\"small\" />\r\n              </Fab>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Fab\r\n                onClick={() => {\r\n                  this.playPause();\r\n                }}\r\n                style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                size=\"small\"\r\n              >\r\n                {this.state.play ? (\r\n                  <PauseIcon size=\"small\" />\r\n                ) : (\r\n                  <PlayArrowIcon size=\"small\" />\r\n                )}\r\n              </Fab>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Fab\r\n                onClick={() => {\r\n                  this.playNextSong();\r\n                }}\r\n                style={{\r\n                  color: \"black\",\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n                size=\"small\"\r\n              >\r\n                <SkipNextIcon size=\"small\" />\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className=\"bottom-nav\"\r\n          >\r\n            <Grid item xs>\r\n              <Fab\r\n                style={{\r\n                  color: \"black\",\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n                disableRipple\r\n              >\r\n                <Checkbox\r\n                  icon={<RepeatIcon size=\"small\" disableRipple />}\r\n                  checkedIcon={<ShuffleIcon size=\"small\" disableRipple />}\r\n                  size=\"small\"\r\n                  checked={this.state.shuffle}\r\n                  onChange={() => {\r\n                    var x = this.state.shuffle;\r\n                    if (x) {\r\n                      this.setState({ snackBarMessage: \"Repeat All\" });\r\n                    } else {\r\n                      this.setState({ snackBarMessage: \"Shuffle on\" });\r\n                    }\r\n                    this.setState({ shuffle: !x, snackBarOpen: true });\r\n                  }}\r\n                />\r\n              </Fab>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Fab\r\n                style={{\r\n                  color: \"black\",\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n                disableRipple\r\n              >\r\n                <Checkbox\r\n                  icon={<FavoriteBorder size=\"small\" disableRipple />}\r\n                  checkedIcon={<Favorite size=\"small\" dissbleRipple />}\r\n                  size=\"small\"\r\n                />\r\n              </Fab>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <ClickAwayListener\r\n                onClickAway={() => {\r\n                  this.setState({ slideOpen: false });\r\n                }}\r\n              >\r\n                <Fab\r\n                  style={{\r\n                    color: \"black\",\r\n                    backgroundColor: \"transparent\",\r\n                    boxShadow: \"none\",\r\n                  }}\r\n                  disableRipple\r\n                  onClick={() => {\r\n                    this.setState({ slideOpen: !this.state.slideOpen });\r\n                  }}\r\n                >\r\n                  {this.state.volume == 0 ? (\r\n                    <VolumeOffIcon size=\"small\" />\r\n                  ) : (\r\n                    <VolumeUpIcon size=\"small\" />\r\n                  )}\r\n                </Fab>\r\n              </ClickAwayListener>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Fab\r\n                style={{\r\n                  color: \"black\",\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n                disableRipple\r\n              >\r\n                <Checkbox\r\n                  icon={<RepeatOneIcon size=\"small\" />}\r\n                  checkedIcon={\r\n                    <RepeatOneIcon size=\"small\" style={{ color: \"red\" }} />\r\n                  }\r\n                  size=\"small\"\r\n                  checked={this.state.repeatOne}\r\n                  onChange={() => {\r\n                    var x = this.state.repeatOne;\r\n                    if (x) {\r\n                      this.setState({\r\n                        snackBarMessage: \"Single repeat is off\",\r\n                      });\r\n                    } else {\r\n                      this.setState({ snackBarMessage: \"Single repeat\" });\r\n                    }\r\n                    this.setState({ repeatOne: !x, snackBarOpen: true });\r\n                  }}\r\n                />\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n          <Snackbar\r\n            open={this.state.snackBarOpen}\r\n            message={this.state.snackBarMessage}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"left\",\r\n            }}\r\n            autoHideDuration={1500}\r\n            onClose={() => {\r\n              this.setState({ snackBarOpen: false });\r\n            }}\r\n          />\r\n\r\n          <Slide\r\n            direction=\"up\"\r\n            in={this.state.slideOpen}\r\n            style={{ position: \"absolute\", bottom: 0, left: 0 }}\r\n            timeout={{\r\n              enter: 600,\r\n              exit: 1000,\r\n            }}\r\n          >\r\n            <Paper\r\n              className=\"volume-slider-paper\"\r\n              style={{ background: \"whiteSmoke\" }}\r\n            >\r\n              <div className=\"volume-slider\">\r\n                <div>\r\n                  {this.state.volume == 0 ? (\r\n                    <VolumeOffIcon size=\"small\" />\r\n                  ) : (\r\n                    <VolumeDownIcon size=\"small\" />\r\n                  )}\r\n                </div>\r\n                <Slider\r\n                  style={{ width: \"60%\" }}\r\n                  onChange={this.handleVolume}\r\n                  defaultValue={60}\r\n                  onMouseUp={() => {\r\n                    this.setState({ slideOpen: false });\r\n                  }}\r\n                />\r\n                <div>\r\n                  <VolumeUpIcon size=\"small\" />\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </Slide>\r\n        </Paper>\r\n\r\n        <Button onClick={this.handleDialog} color=\"primary\">\r\n          Info\r\n        </Button>\r\n        <Dialog open={this.state.DialogOpen} onClose={this.handleDialog}>\r\n          <DialogContent style={{ padding: 0 }}>\r\n            <List>\r\n              <ListItem>\r\n                <ListItemText>\r\n                  <Typography variant=\"body1\">\r\n                    Title : {this.state.infoObj.title}\r\n                  </Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText>\r\n                  <Typography variant=\"body1\">\r\n                    Album : {this.state.infoObj.album}\r\n                  </Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText>\r\n                  <Typography variant=\"body1\">\r\n                    Genre : {this.state.infoObj.genre}\r\n                  </Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText>\r\n                  <Typography variant=\"body1\">\r\n                    Artist : {this.state.infoObj.artist}\r\n                  </Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText>\r\n                  <Typography variant=\"body1\">\r\n                    Year released : {this.state.infoObj.year}\r\n                  </Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Home from \"./musicplayer/home\";\r\n\r\nReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n","var map = {\n\t\"./bharat.mp3\": 82,\n\t\"./bomdiggy.mp3\": 83,\n\t\"./galat.mp3\": 84,\n\t\"./highrated.mp3\": 85,\n\t\"./inkaedo.mp3\": 86,\n\t\"./pachtaoge.mp3\": 87,\n\t\"./preminche.mp3\": 88,\n\t\"./sanamre.mp3\": 89,\n\t\"./sochnasake.mp3\": 90,\n\t\"./sorry.mp3\": 91,\n\t\"./yaanji.mp3\": 92\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 44;","module.exports = __webpack_public_path__ + \"static/media/bharat.d87b7fea.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bomdiggy.978a7ec7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/galat.7e7998cd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/highrated.ee330ef9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/inkaedo.87acbbe5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pachtaoge.86457d66.mp3\";","module.exports = __webpack_public_path__ + \"static/media/preminche.26b929d3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sanamre.ed5ba229.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sochnasake.ea7c6652.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sorry.b2a403fa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/yaanji.74f7d684.mp3\";"],"sourceRoot":""}